; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\_build\peer_id.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\peer_id.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\config\bluetoothds_template_pca10040_s132 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_dtm -I..\..\..\..\..\..\components\ble\ble_racp -I..\..\..\..\..\..\components\ble\ble_services\ble_ancs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_ans_c -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\ble\ble_services\ble_cscs -I..\..\..\..\..\..\components\ble\ble_services\ble_cts_c -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_gls -I..\..\..\..\..\..\components\ble\ble_services\ble_hids -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_hts -I..\..\..\..\..\..\components\ble\ble_services\ble_ias -I..\..\..\..\..\..\components\ble\ble_services\ble_ias_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lls -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\ble\ble_services\ble_nus_c -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_tps -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_qwr -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\drivers_nrf\adc -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\comp -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\i2s -I..\..\..\..\..\..\components\drivers_nrf\lpcomp -I..\..\..\..\..\..\components\drivers_nrf\pdm -I..\..\..\..\..\..\components\drivers_nrf\ppi -I..\..\..\..\..\..\components\drivers_nrf\pwm -I..\..\..\..\..\..\components\drivers_nrf\qdec -I..\..\..\..\..\..\components\drivers_nrf\rng -I..\..\..\..\..\..\components\drivers_nrf\rtc -I..\..\..\..\..\..\components\drivers_nrf\saadc -I..\..\..\..\..\..\components\drivers_nrf\spi_master -I..\..\..\..\..\..\components\drivers_nrf\spi_slave -I..\..\..\..\..\..\components\drivers_nrf\swi -I..\..\..\..\..\..\components\drivers_nrf\timer -I..\..\..\..\..\..\components\drivers_nrf\twi_master -I..\..\..\..\..\..\components\drivers_nrf\twis_slave -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\drivers_nrf\wdt -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\crc32 -I..\..\..\..\..\..\components\libraries\csense -I..\..\..\..\..\..\components\libraries\csense_drv -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fifo -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\hardfault -I..\..\..\..\..\..\components\libraries\hci -I..\..\..\..\..\..\components\libraries\led_softblink -I..\..\..\..\..\..\components\libraries\log -I..\..\..\..\..\..\components\libraries\log\src -I..\..\..\..\..\..\components\libraries\low_power_pwm -I..\..\..\..\..\..\components\libraries\mailbox -I..\..\..\..\..\..\components\libraries\mem_manager -I..\..\..\..\..\..\components\libraries\pwm -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\slip -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\twi -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common\softdevice_handler -I..\..\..\..\..\..\components\softdevice\s132\headers -I..\..\..\..\..\..\components\softdevice\s132\headers\nrf52 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\bsp -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\none -I..\..\..\..\..\..\components\drivers_ext\LS013B7DH06 -I..\..\..\..\..\..\external\ugfx -I..\..\..\..\..\..\external\ugfx\drivers\gdisp\framebuffer -I..\..\..\..\..\..\external\ugfx\src\gdisp -I..\..\..\..\..\..\external\ugfx\drivers\gdisp\ -IC:\Users\Michael\Documents\none\nRF5_SDK_12.1.0_0d23e2a\examples\ble_peripheral\none\pca10040\s132\arm5_no_packs\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.9.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=521 -D_RTE_ -DNRF52 -DBLE_STACK_SUPPORT_REQD -D__HEAP_SIZE=0 -DS132 -DNRF_SD_BLE_API_VERSION=3 -DBOARD_PCA10040 -DNRF52_PAN_12 -DNRF52_PAN_15 -DNRF52_PAN_20 -DNRF52_PAN_30 -DNRF52_PAN_31 -DNRF52_PAN_36 -DNRF52_PAN_51 -DNRF52_PAN_53 -DNRF52_PAN_54 -DNRF52_PAN_55 -DNRF52_PAN_58 -DNRF52_PAN_62 -DNRF52_PAN_63 -DNRF52_PAN_64 -DCONFIG_GPIO_AS_PINRESET -DSOFTDEVICE_PRESENT -DNRF52832 -DNRF52 -DSWI_DISABLE0 --omf_browse=.\_build\peer_id.crf ..\..\..\..\..\..\components\ble\peer_manager\peer_id.c]
                          THUMB

                          AREA ||i.claim||, CODE, READONLY, ALIGN=1

                  claim PROC
;;;47     
;;;48     static pm_peer_id_t claim(pm_peer_id_t peer_id, uint8_t * mutex_group)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;49     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;50         pm_peer_id_t allocated_peer_id = PM_PEER_ID_INVALID;
000008  f64f76ff          MOV      r6,#0xffff
;;;51         if (peer_id == PM_PEER_ID_INVALID)
00000c  4630              MOV      r0,r6
00000e  4284              CMP      r4,r0
000010  d10a              BNE      |L1.40|
;;;52         {
;;;53             allocated_peer_id = pm_mutex_lock_first_available(mutex_group, PM_PEER_ID_N_AVAILABLE_IDS);
000012  f44f7180          MOV      r1,#0x100
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       pm_mutex_lock_first_available
00001c  4606              MOV      r6,r0
;;;54             if (allocated_peer_id == PM_PEER_ID_N_AVAILABLE_IDS)
00001e  f5b67f80          CMP      r6,#0x100
000022  d10f              BNE      |L1.68|
;;;55             {
;;;56                 allocated_peer_id = PM_PEER_ID_INVALID;
000024  4626              MOV      r6,r4
000026  e00d              B        |L1.68|
                  |L1.40|
;;;57             }
;;;58         }
;;;59         else if (peer_id < PM_PEER_ID_N_AVAILABLE_IDS)
000028  2cff              CMP      r4,#0xff
00002a  dc0b              BGT      |L1.68|
;;;60         {
;;;61             bool lock_success = pm_mutex_lock(mutex_group, peer_id);
00002c  4621              MOV      r1,r4
00002e  4628              MOV      r0,r5
000030  f7fffffe          BL       pm_mutex_lock
000034  4607              MOV      r7,r0
;;;62             allocated_peer_id = lock_success ? peer_id : PM_PEER_ID_INVALID;
000036  b10f              CBZ      r7,|L1.60|
000038  4620              MOV      r0,r4
00003a  e001              B        |L1.64|
                  |L1.60|
00003c  f64f70ff          MOV      r0,#0xffff
                  |L1.64|
000040  4606              MOV      r6,r0
;;;63         }
000042  bf00              NOP      
                  |L1.68|
;;;64         return allocated_peer_id;
000044  4630              MOV      r0,r6
;;;65     }
000046  e8bd81f0          POP      {r4-r8,pc}
;;;66     
                          ENDP


                          AREA ||i.internal_state_reset||, CODE, READONLY, ALIGN=1

                  internal_state_reset PROC
;;;33     
;;;34     static void internal_state_reset(pi_t * p_pi)
000000  b510              PUSH     {r4,lr}
;;;35     {
000002  4604              MOV      r4,r0
;;;36         memset(p_pi, 0, sizeof(pi_t));
000004  2140              MOVS     r1,#0x40
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       __aeabi_memclr
;;;37     }
00000c  bd10              POP      {r4,pc}
;;;38     
                          ENDP


                          AREA ||i.next_id_get||, CODE, READONLY, ALIGN=1

                  next_id_get PROC
;;;124    
;;;125    pm_peer_id_t next_id_get(pm_peer_id_t prev_peer_id, uint8_t * mutex_group)
000000  b570              PUSH     {r4-r6,lr}
;;;126    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;127        pm_peer_id_t i = (prev_peer_id == PM_PEER_ID_INVALID) ? 0 : (prev_peer_id + 1);
000006  f64f70ff          MOV      r0,#0xffff
00000a  4285              CMP      r5,r0
00000c  d101              BNE      |L3.18|
00000e  2000              MOVS     r0,#0
000010  e000              B        |L3.20|
                  |L3.18|
000012  1c68              ADDS     r0,r5,#1
                  |L3.20|
000014  b284              UXTH     r4,r0
;;;128        for (; i < PM_PEER_ID_N_AVAILABLE_IDS; i++)
000016  e008              B        |L3.42|
                  |L3.24|
;;;129        {
;;;130            if (pm_mutex_lock_status_get(mutex_group, i))
000018  4621              MOV      r1,r4
00001a  4630              MOV      r0,r6
00001c  f7fffffe          BL       pm_mutex_lock_status_get
000020  b108              CBZ      r0,|L3.38|
;;;131            {
;;;132                return i;
000022  4620              MOV      r0,r4
                  |L3.36|
;;;133            }
;;;134        }
;;;135    
;;;136        return PM_PEER_ID_INVALID;
;;;137    }
000024  bd70              POP      {r4-r6,pc}
                  |L3.38|
000026  1c60              ADDS     r0,r4,#1              ;128
000028  b284              UXTH     r4,r0                 ;128
                  |L3.42|
00002a  2cff              CMP      r4,#0xff              ;128
00002c  ddf4              BLE      |L3.24|
00002e  f64f70ff          MOV      r0,#0xffff            ;136
000032  e7f7              B        |L3.36|
;;;138    
                          ENDP


                          AREA ||i.peer_id_allocate||, CODE, READONLY, ALIGN=2

                  peer_id_allocate PROC
;;;76     
;;;77     pm_peer_id_t peer_id_allocate(pm_peer_id_t peer_id)
000000  b510              PUSH     {r4,lr}
;;;78     {
000002  4604              MOV      r4,r0
;;;79         return claim(peer_id, m_pi.used_peer_ids);
000004  4902              LDR      r1,|L4.16|
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       claim
;;;80     }
00000c  bd10              POP      {r4,pc}
;;;81     
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      m_pi

                          AREA ||i.peer_id_delete||, CODE, READONLY, ALIGN=2

                  peer_id_delete PROC
;;;82     
;;;83     bool peer_id_delete(pm_peer_id_t peer_id)
000000  b570              PUSH     {r4-r6,lr}
;;;84     {
000002  4604              MOV      r4,r0
;;;85         pm_peer_id_t deleted_peer_id;
;;;86     
;;;87         if (peer_id == PM_PEER_ID_INVALID)
000004  f64f70ff          MOV      r0,#0xffff
000008  4284              CMP      r4,r0
00000a  d101              BNE      |L5.16|
;;;88         {
;;;89             return false;
00000c  2000              MOVS     r0,#0
                  |L5.14|
;;;90         }
;;;91     
;;;92         deleted_peer_id = claim(peer_id, m_pi.deleted_peer_ids);
;;;93     
;;;94         return (deleted_peer_id == peer_id);
;;;95     }
00000e  bd70              POP      {r4-r6,pc}
                  |L5.16|
000010  4905              LDR      r1,|L5.40|
000012  4620              MOV      r0,r4                 ;92
000014  f7fffffe          BL       claim
000018  4605              MOV      r5,r0                 ;92
00001a  42a5              CMP      r5,r4                 ;94
00001c  d101              BNE      |L5.34|
00001e  2001              MOVS     r0,#1                 ;94
000020  e7f5              B        |L5.14|
                  |L5.34|
000022  2000              MOVS     r0,#0                 ;94
000024  e7f3              B        |L5.14|
;;;96     
                          ENDP

000026  0000              DCW      0x0000
                  |L5.40|
                          DCD      m_pi+0x20

                          AREA ||i.peer_id_free||, CODE, READONLY, ALIGN=2

                  peer_id_free PROC
;;;97     
;;;98     void peer_id_free(pm_peer_id_t peer_id)
000000  b510              PUSH     {r4,lr}
;;;99     {
000002  4604              MOV      r4,r0
;;;100        release(peer_id, m_pi.used_peer_ids);
000004  4904              LDR      r1,|L6.24|
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       release
;;;101        release(peer_id, m_pi.deleted_peer_ids);
00000c  4902              LDR      r1,|L6.24|
00000e  3120              ADDS     r1,r1,#0x20
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       release
;;;102    }
000016  bd10              POP      {r4,pc}
;;;103    
                          ENDP

                  |L6.24|
                          DCD      m_pi

                          AREA ||i.peer_id_get_next_deleted||, CODE, READONLY, ALIGN=2

                  peer_id_get_next_deleted PROC
;;;157    
;;;158    pm_peer_id_t peer_id_get_next_deleted(pm_peer_id_t prev_peer_id)
000000  b510              PUSH     {r4,lr}
;;;159    {
000002  4604              MOV      r4,r0
;;;160        return next_id_get(prev_peer_id, m_pi.deleted_peer_ids);
000004  4902              LDR      r1,|L7.16|
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       next_id_get
;;;161    }
00000c  bd10              POP      {r4,pc}
;;;162    
                          ENDP

00000e  0000              DCW      0x0000
                  |L7.16|
                          DCD      m_pi+0x20

                          AREA ||i.peer_id_get_next_used||, CODE, READONLY, ALIGN=2

                  peer_id_get_next_used PROC
;;;139    
;;;140    pm_peer_id_t peer_id_get_next_used(pm_peer_id_t peer_id)
000000  b510              PUSH     {r4,lr}
;;;141    {
000002  4604              MOV      r4,r0
;;;142        peer_id = next_id_get(peer_id, m_pi.used_peer_ids);
000004  490b              LDR      r1,|L8.52|
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       next_id_get
00000c  4604              MOV      r4,r0
;;;143    
;;;144        while (peer_id != PM_PEER_ID_INVALID)
00000e  e00a              B        |L8.38|
                  |L8.16|
;;;145        {
;;;146            if (!peer_id_is_deleted(peer_id))
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       peer_id_is_deleted
000016  b908              CBNZ     r0,|L8.28|
;;;147            {
;;;148                return peer_id;
000018  4620              MOV      r0,r4
                  |L8.26|
;;;149            }
;;;150    
;;;151            peer_id = next_id_get(peer_id, m_pi.used_peer_ids);
;;;152        }
;;;153    
;;;154        return peer_id;
;;;155    }
00001a  bd10              POP      {r4,pc}
                  |L8.28|
00001c  4905              LDR      r1,|L8.52|
00001e  4620              MOV      r0,r4                 ;151
000020  f7fffffe          BL       next_id_get
000024  4604              MOV      r4,r0                 ;151
                  |L8.38|
000026  f64f70ff          MOV      r0,#0xffff            ;144
00002a  4284              CMP      r4,r0                 ;144
00002c  d1f0              BNE      |L8.16|
00002e  4620              MOV      r0,r4                 ;154
000030  e7f3              B        |L8.26|
;;;156    
                          ENDP

000032  0000              DCW      0x0000
                  |L8.52|
                          DCD      m_pi

                          AREA ||i.peer_id_init||, CODE, READONLY, ALIGN=2

                  peer_id_init PROC
;;;39     
;;;40     void peer_id_init(void)
000000  b510              PUSH     {r4,lr}
;;;41     {
;;;42         internal_state_reset(&m_pi);
000002  4807              LDR      r0,|L9.32|
000004  f7fffffe          BL       internal_state_reset
;;;43         pm_mutex_init(m_pi.used_peer_ids, PM_PEER_ID_N_AVAILABLE_IDS);
000008  f44f7180          MOV      r1,#0x100
00000c  4804              LDR      r0,|L9.32|
00000e  f7fffffe          BL       pm_mutex_init
;;;44         pm_mutex_init(m_pi.deleted_peer_ids, PM_PEER_ID_N_AVAILABLE_IDS);
000012  f44f7180          MOV      r1,#0x100
000016  4802              LDR      r0,|L9.32|
000018  3020              ADDS     r0,r0,#0x20
00001a  f7fffffe          BL       pm_mutex_init
;;;45     }
00001e  bd10              POP      {r4,pc}
;;;46     
                          ENDP

                  |L9.32|
                          DCD      m_pi

                          AREA ||i.peer_id_is_allocated||, CODE, READONLY, ALIGN=2

                  peer_id_is_allocated PROC
;;;104    
;;;105    bool peer_id_is_allocated(pm_peer_id_t peer_id)
000000  b510              PUSH     {r4,lr}
;;;106    {
000002  4604              MOV      r4,r0
;;;107        if (peer_id < PM_PEER_ID_N_AVAILABLE_IDS)
000004  2cff              CMP      r4,#0xff
000006  dc04              BGT      |L10.18|
;;;108        {
;;;109            return pm_mutex_lock_status_get(m_pi.used_peer_ids, peer_id);
000008  4621              MOV      r1,r4
00000a  4803              LDR      r0,|L10.24|
00000c  f7fffffe          BL       pm_mutex_lock_status_get
                  |L10.16|
;;;110        }
;;;111        return false;
;;;112    }
000010  bd10              POP      {r4,pc}
                  |L10.18|
000012  2000              MOVS     r0,#0                 ;111
000014  e7fc              B        |L10.16|
;;;113    
                          ENDP

000016  0000              DCW      0x0000
                  |L10.24|
                          DCD      m_pi

                          AREA ||i.peer_id_is_deleted||, CODE, READONLY, ALIGN=2

                  peer_id_is_deleted PROC
;;;114    
;;;115    bool peer_id_is_deleted(pm_peer_id_t peer_id)
000000  b510              PUSH     {r4,lr}
;;;116    {
000002  4604              MOV      r4,r0
;;;117        if (peer_id < PM_PEER_ID_N_AVAILABLE_IDS)
000004  2cff              CMP      r4,#0xff
000006  dc04              BGT      |L11.18|
;;;118        {
;;;119            return pm_mutex_lock_status_get(m_pi.deleted_peer_ids, peer_id);
000008  4621              MOV      r1,r4
00000a  4803              LDR      r0,|L11.24|
00000c  f7fffffe          BL       pm_mutex_lock_status_get
                  |L11.16|
;;;120        }
;;;121        return false;
;;;122    }
000010  bd10              POP      {r4,pc}
                  |L11.18|
000012  2000              MOVS     r0,#0                 ;121
000014  e7fc              B        |L11.16|
;;;123    
                          ENDP

000016  0000              DCW      0x0000
                  |L11.24|
                          DCD      m_pi+0x20

                          AREA ||i.peer_id_n_ids||, CODE, READONLY, ALIGN=2

                  peer_id_n_ids PROC
;;;163    
;;;164    uint32_t peer_id_n_ids(void)
000000  b570              PUSH     {r4-r6,lr}
;;;165    {
;;;166        uint32_t n_ids = 0;
000002  2500              MOVS     r5,#0
;;;167    
;;;168        for (pm_peer_id_t i = 0; i < PM_PEER_ID_N_AVAILABLE_IDS; i++)
000004  2400              MOVS     r4,#0
000006  e006              B        |L12.22|
                  |L12.8|
;;;169        {
;;;170            n_ids += pm_mutex_lock_status_get(m_pi.used_peer_ids, i);
000008  4621              MOV      r1,r4
00000a  4805              LDR      r0,|L12.32|
00000c  f7fffffe          BL       pm_mutex_lock_status_get
000010  4405              ADD      r5,r5,r0
000012  1c60              ADDS     r0,r4,#1              ;168
000014  b284              UXTH     r4,r0                 ;168
                  |L12.22|
000016  2cff              CMP      r4,#0xff              ;168
000018  ddf6              BLE      |L12.8|
;;;171        }
;;;172    
;;;173        return n_ids;
00001a  4628              MOV      r0,r5
;;;174    }
00001c  bd70              POP      {r4-r6,pc}
;;;175    #endif //PEER_MANAGER_ENABLED
                          ENDP

00001e  0000              DCW      0x0000
                  |L12.32|
                          DCD      m_pi

                          AREA ||i.release||, CODE, READONLY, ALIGN=1

                  release PROC
;;;67     
;;;68     static void release(pm_peer_id_t peer_id, uint8_t * mutex_group)
000000  b570              PUSH     {r4-r6,lr}
;;;69     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;70         if (peer_id < PM_PEER_ID_N_AVAILABLE_IDS)
000006  2cff              CMP      r4,#0xff
000008  dc03              BGT      |L13.18|
;;;71         {
;;;72             pm_mutex_unlock(mutex_group, peer_id);
00000a  4621              MOV      r1,r4
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       pm_mutex_unlock
                  |L13.18|
;;;73         }
;;;74     }
000012  bd70              POP      {r4-r6,pc}
;;;75     
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  m_pi
                          %        64

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\ble\\peer_manager\\peer_id.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_peer_id_c_cbb99fe4____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_peer_id_c_cbb99fe4____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_peer_id_c_cbb99fe4____REVSH|
#line 402
|__asm___9_peer_id_c_cbb99fe4____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_peer_id_c_cbb99fe4____RRX|
#line 587
|__asm___9_peer_id_c_cbb99fe4____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
