; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\_build\bsp_btn_ble.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\bsp_btn_ble.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\config\bluetoothds_template_pca10040_s132 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_dtm -I..\..\..\..\..\..\components\ble\ble_racp -I..\..\..\..\..\..\components\ble\ble_services\ble_ancs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_ans_c -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\ble\ble_services\ble_cscs -I..\..\..\..\..\..\components\ble\ble_services\ble_cts_c -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_gls -I..\..\..\..\..\..\components\ble\ble_services\ble_hids -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_hts -I..\..\..\..\..\..\components\ble\ble_services\ble_ias -I..\..\..\..\..\..\components\ble\ble_services\ble_ias_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lls -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\ble\ble_services\ble_nus_c -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_tps -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_qwr -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\drivers_nrf\adc -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\comp -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\i2s -I..\..\..\..\..\..\components\drivers_nrf\lpcomp -I..\..\..\..\..\..\components\drivers_nrf\pdm -I..\..\..\..\..\..\components\drivers_nrf\ppi -I..\..\..\..\..\..\components\drivers_nrf\pwm -I..\..\..\..\..\..\components\drivers_nrf\qdec -I..\..\..\..\..\..\components\drivers_nrf\rng -I..\..\..\..\..\..\components\drivers_nrf\rtc -I..\..\..\..\..\..\components\drivers_nrf\saadc -I..\..\..\..\..\..\components\drivers_nrf\spi_master -I..\..\..\..\..\..\components\drivers_nrf\spi_slave -I..\..\..\..\..\..\components\drivers_nrf\swi -I..\..\..\..\..\..\components\drivers_nrf\timer -I..\..\..\..\..\..\components\drivers_nrf\twi_master -I..\..\..\..\..\..\components\drivers_nrf\twis_slave -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\drivers_nrf\wdt -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\crc32 -I..\..\..\..\..\..\components\libraries\csense -I..\..\..\..\..\..\components\libraries\csense_drv -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fifo -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\hardfault -I..\..\..\..\..\..\components\libraries\hci -I..\..\..\..\..\..\components\libraries\led_softblink -I..\..\..\..\..\..\components\libraries\log -I..\..\..\..\..\..\components\libraries\log\src -I..\..\..\..\..\..\components\libraries\low_power_pwm -I..\..\..\..\..\..\components\libraries\mailbox -I..\..\..\..\..\..\components\libraries\mem_manager -I..\..\..\..\..\..\components\libraries\pwm -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\slip -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\twi -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common\softdevice_handler -I..\..\..\..\..\..\components\softdevice\s132\headers -I..\..\..\..\..\..\components\softdevice\s132\headers\nrf52 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\bsp -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\none -I..\..\..\..\..\..\components\drivers_ext\LS013B7DH06 -I..\..\..\..\..\..\external\ugfx -I..\..\..\..\..\..\external\ugfx\drivers\gdisp\framebuffer -I..\..\..\..\..\..\external\ugfx\src\gdisp -I..\..\..\..\..\..\external\ugfx\drivers\gdisp\ -IC:\Users\Michael\Documents\none\nRF5_SDK_12.1.0_0d23e2a\examples\ble_peripheral\none\pca10040\s132\arm5_no_packs\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.9.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=521 -D_RTE_ -DNRF52 -DBLE_STACK_SUPPORT_REQD -D__HEAP_SIZE=0 -DS132 -DNRF_SD_BLE_API_VERSION=3 -DBOARD_PCA10040 -DNRF52_PAN_12 -DNRF52_PAN_15 -DNRF52_PAN_20 -DNRF52_PAN_30 -DNRF52_PAN_31 -DNRF52_PAN_36 -DNRF52_PAN_51 -DNRF52_PAN_53 -DNRF52_PAN_54 -DNRF52_PAN_55 -DNRF52_PAN_58 -DNRF52_PAN_62 -DNRF52_PAN_63 -DNRF52_PAN_64 -DCONFIG_GPIO_AS_PINRESET -DSOFTDEVICE_PRESENT -DNRF52832 -DNRF52 -DSWI_DISABLE0 --omf_browse=.\_build\bsp_btn_ble.crf ..\..\..\..\..\bsp\bsp_btn_ble.c]
                          THUMB

                          AREA ||i.advertising_buttons_configure||, CODE, READONLY, ALIGN=1

                  advertising_buttons_configure PROC
;;;115     */
;;;116    static uint32_t advertising_buttons_configure()
000000  b510              PUSH     {r4,lr}
;;;117    {
;;;118        uint32_t err_code;
;;;119    
;;;120        err_code = bsp_event_to_button_action_assign(BTN_ID_DISCONNECT,
000002  2201              MOVS     r2,#1
000004  2102              MOVS     r1,#2
000006  2000              MOVS     r0,#0
000008  f7fffffe          BL       bsp_event_to_button_action_assign
00000c  4604              MOV      r4,r0
;;;121                                                     BTN_ACTION_DISCONNECT,
;;;122                                                     BSP_EVENT_DEFAULT);
;;;123        RETURN_ON_ERROR_NOT_INVALID_PARAM(err_code);
00000e  bf00              NOP      
000010  b11c              CBZ      r4,|L1.26|
000012  2c07              CMP      r4,#7
000014  d001              BEQ      |L1.26|
000016  4620              MOV      r0,r4
                  |L1.24|
;;;124    
;;;125        err_code = bsp_event_to_button_action_assign(BTN_ID_WHITELIST_OFF,
;;;126                                                     BTN_ACTION_WHITELIST_OFF,
;;;127                                                     BSP_EVENT_WHITELIST_OFF);
;;;128        RETURN_ON_ERROR_NOT_INVALID_PARAM(err_code);
;;;129    
;;;130        err_code = bsp_event_to_button_action_assign(BTN_ID_SLEEP,
;;;131                                                     BTN_ACTION_SLEEP,
;;;132                                                     BSP_EVENT_SLEEP);
;;;133        RETURN_ON_ERROR_NOT_INVALID_PARAM(err_code);
;;;134    
;;;135        return NRF_SUCCESS;
;;;136    }
000018  bd10              POP      {r4,pc}
                  |L1.26|
00001a  bf00              NOP                            ;123
00001c  2207              MOVS     r2,#7                 ;125
00001e  2102              MOVS     r1,#2                 ;125
000020  2001              MOVS     r0,#1                 ;125
000022  f7fffffe          BL       bsp_event_to_button_action_assign
000026  4604              MOV      r4,r0                 ;125
000028  bf00              NOP                            ;128
00002a  b11c              CBZ      r4,|L1.52|
00002c  2c07              CMP      r4,#7                 ;128
00002e  d001              BEQ      |L1.52|
000030  4620              MOV      r0,r4                 ;128
000032  e7f1              B        |L1.24|
                  |L1.52|
000034  bf00              NOP                            ;128
000036  220a              MOVS     r2,#0xa               ;130
000038  2100              MOVS     r1,#0                 ;130
00003a  4608              MOV      r0,r1                 ;130
00003c  f7fffffe          BL       bsp_event_to_button_action_assign
000040  4604              MOV      r4,r0                 ;130
000042  bf00              NOP                            ;133
000044  b11c              CBZ      r4,|L1.78|
000046  2c07              CMP      r4,#7                 ;133
000048  d001              BEQ      |L1.78|
00004a  4620              MOV      r0,r4                 ;133
00004c  e7e4              B        |L1.24|
                  |L1.78|
00004e  bf00              NOP                            ;133
000050  2000              MOVS     r0,#0                 ;135
000052  e7e1              B        |L1.24|
;;;137    
                          ENDP


                          AREA ||i.bsp_btn_ble_init||, CODE, READONLY, ALIGN=2

                  bsp_btn_ble_init PROC
;;;221    
;;;222    uint32_t bsp_btn_ble_init(bsp_btn_ble_error_handler_t error_handler, bsp_event_t * p_startup_bsp_evt)
000000  b570              PUSH     {r4-r6,lr}
;;;223    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;224        uint32_t err_code = NRF_SUCCESS;
000006  2600              MOVS     r6,#0
;;;225    
;;;226        m_error_handler = error_handler;
000008  4809              LDR      r0,|L2.48|
00000a  6005              STR      r5,[r0,#0]  ; m_error_handler
;;;227    
;;;228        if (p_startup_bsp_evt != NULL)
00000c  b144              CBZ      r4,|L2.32|
;;;229        {
;;;230            err_code = startup_event_extract(p_startup_bsp_evt);
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       startup_event_extract
000014  4606              MOV      r6,r0
;;;231            RETURN_ON_ERROR(err_code);
000016  bf00              NOP      
000018  b10e              CBZ      r6,|L2.30|
00001a  4630              MOV      r0,r6
                  |L2.28|
;;;232        }
;;;233    
;;;234        if (m_num_connections == 0)
;;;235        {
;;;236            err_code = advertising_buttons_configure();
;;;237        }
;;;238    
;;;239        return err_code;
;;;240    }
00001c  bd70              POP      {r4-r6,pc}
                  |L2.30|
00001e  bf00              NOP                            ;231
                  |L2.32|
000020  4804              LDR      r0,|L2.52|
000022  6800              LDR      r0,[r0,#0]            ;234  ; m_num_connections
000024  b910              CBNZ     r0,|L2.44|
000026  f7fffffe          BL       advertising_buttons_configure
00002a  4606              MOV      r6,r0                 ;236
                  |L2.44|
00002c  4630              MOV      r0,r6                 ;239
00002e  e7f5              B        |L2.28|
                          ENDP

                  |L2.48|
                          DCD      m_error_handler
                  |L2.52|
                          DCD      m_num_connections

                          AREA ||i.bsp_btn_ble_on_ble_evt||, CODE, READONLY, ALIGN=2

                  bsp_btn_ble_on_ble_evt PROC
;;;189    
;;;190    void bsp_btn_ble_on_ble_evt(ble_evt_t * p_ble_evt)
000000  b570              PUSH     {r4-r6,lr}
;;;191    {
000002  4605              MOV      r5,r0
;;;192        uint32_t err_code;
;;;193    
;;;194        switch (p_ble_evt->header.evt_id)
000004  8828              LDRH     r0,[r5,#0]
000006  2810              CMP      r0,#0x10
000008  d002              BEQ      |L3.16|
00000a  2811              CMP      r0,#0x11
00000c  d12c              BNE      |L3.104|
00000e  e015              B        |L3.60|
                  |L3.16|
;;;195        {
;;;196            case BLE_GAP_EVT_CONNECTED:
;;;197                if (m_num_connections == 0)
000010  4817              LDR      r0,|L3.112|
000012  6800              LDR      r0,[r0,#0]  ; m_num_connections
000014  b960              CBNZ     r0,|L3.48|
;;;198                {
;;;199                    err_code = connection_buttons_configure();
000016  f7fffffe          BL       connection_buttons_configure
00001a  4604              MOV      r4,r0
;;;200                    CALL_HANDLER_ON_ERROR(err_code);
00001c  bf00              NOP      
00001e  b134              CBZ      r4,|L3.46|
000020  4814              LDR      r0,|L3.116|
000022  6800              LDR      r0,[r0,#0]  ; m_error_handler
000024  b118              CBZ      r0,|L3.46|
000026  4620              MOV      r0,r4
000028  4912              LDR      r1,|L3.116|
00002a  6809              LDR      r1,[r1,#0]  ; m_error_handler
00002c  4788              BLX      r1
                  |L3.46|
00002e  bf00              NOP      
                  |L3.48|
;;;201                }
;;;202    
;;;203                m_num_connections++;
000030  480f              LDR      r0,|L3.112|
000032  6800              LDR      r0,[r0,#0]  ; m_num_connections
000034  1c40              ADDS     r0,r0,#1
000036  490e              LDR      r1,|L3.112|
000038  6008              STR      r0,[r1,#0]  ; m_num_connections
;;;204                break;
00003a  e016              B        |L3.106|
                  |L3.60|
;;;205    
;;;206            case BLE_GAP_EVT_DISCONNECTED:
;;;207                m_num_connections--;
00003c  480c              LDR      r0,|L3.112|
00003e  6800              LDR      r0,[r0,#0]  ; m_num_connections
000040  1e40              SUBS     r0,r0,#1
000042  490b              LDR      r1,|L3.112|
000044  6008              STR      r0,[r1,#0]  ; m_num_connections
;;;208    
;;;209                if (m_num_connections == 0)
000046  4608              MOV      r0,r1
000048  6800              LDR      r0,[r0,#0]  ; m_num_connections
00004a  b960              CBNZ     r0,|L3.102|
;;;210                {
;;;211                    err_code = advertising_buttons_configure();
00004c  f7fffffe          BL       advertising_buttons_configure
000050  4604              MOV      r4,r0
;;;212                    CALL_HANDLER_ON_ERROR(err_code);
000052  bf00              NOP      
000054  b134              CBZ      r4,|L3.100|
000056  4807              LDR      r0,|L3.116|
000058  6800              LDR      r0,[r0,#0]  ; m_error_handler
00005a  b118              CBZ      r0,|L3.100|
00005c  4620              MOV      r0,r4
00005e  4905              LDR      r1,|L3.116|
000060  6809              LDR      r1,[r1,#0]  ; m_error_handler
000062  4788              BLX      r1
                  |L3.100|
000064  bf00              NOP      
                  |L3.102|
;;;213                }
;;;214                break;
000066  e000              B        |L3.106|
                  |L3.104|
;;;215    
;;;216            default:
;;;217                break;
000068  bf00              NOP      
                  |L3.106|
00006a  bf00              NOP                            ;204
;;;218        }
;;;219    }
00006c  bd70              POP      {r4-r6,pc}
;;;220    
                          ENDP

00006e  0000              DCW      0x0000
                  |L3.112|
                          DCD      m_num_connections
                  |L3.116|
                          DCD      m_error_handler

                          AREA ||i.bsp_btn_ble_sleep_mode_prepare||, CODE, READONLY, ALIGN=1

                  bsp_btn_ble_sleep_mode_prepare PROC
;;;179    
;;;180    uint32_t bsp_btn_ble_sleep_mode_prepare(void)
000000  b510              PUSH     {r4,lr}
;;;181    {
;;;182        uint32_t err_code = bsp_wakeup_buttons_set((1 << BTN_ID_WAKEUP) | (1 << BTN_ID_WAKEUP_BOND_DELETE));
000002  2003              MOVS     r0,#3
000004  f7fffffe          BL       bsp_wakeup_buttons_set
000008  4604              MOV      r4,r0
;;;183    
;;;184        RETURN_ON_ERROR_NOT_NOT_SUPPORTED(err_code);
00000a  bf00              NOP      
00000c  b11c              CBZ      r4,|L4.22|
00000e  2c06              CMP      r4,#6
000010  d001              BEQ      |L4.22|
000012  4620              MOV      r0,r4
                  |L4.20|
;;;185    
;;;186        return NRF_SUCCESS;
;;;187    }
000014  bd10              POP      {r4,pc}
                  |L4.22|
000016  bf00              NOP                            ;184
000018  2000              MOVS     r0,#0                 ;186
00001a  e7fb              B        |L4.20|
;;;188    
                          ENDP


                          AREA ||i.connection_buttons_configure||, CODE, READONLY, ALIGN=1

                  connection_buttons_configure PROC
;;;87      */
;;;88     static uint32_t connection_buttons_configure()
000000  b510              PUSH     {r4,lr}
;;;89     {
;;;90         uint32_t err_code;
;;;91     
;;;92         err_code = bsp_event_to_button_action_assign(BTN_ID_SLEEP,
000002  2201              MOVS     r2,#1
000004  2100              MOVS     r1,#0
000006  4608              MOV      r0,r1
000008  f7fffffe          BL       bsp_event_to_button_action_assign
00000c  4604              MOV      r4,r0
;;;93                                                      BTN_ACTION_SLEEP,
;;;94                                                      BSP_EVENT_DEFAULT);
;;;95         RETURN_ON_ERROR_NOT_INVALID_PARAM(err_code);
00000e  bf00              NOP      
000010  b11c              CBZ      r4,|L5.26|
000012  2c07              CMP      r4,#7
000014  d001              BEQ      |L5.26|
000016  4620              MOV      r0,r4
                  |L5.24|
;;;96     
;;;97         err_code = bsp_event_to_button_action_assign(BTN_ID_WHITELIST_OFF,
;;;98                                                      BTN_ACTION_WHITELIST_OFF,
;;;99                                                      BSP_EVENT_WHITELIST_OFF);
;;;100        RETURN_ON_ERROR_NOT_INVALID_PARAM(err_code);
;;;101    
;;;102        err_code = bsp_event_to_button_action_assign(BTN_ID_DISCONNECT,
;;;103                                                     BTN_ACTION_DISCONNECT,
;;;104                                                     BSP_EVENT_DISCONNECT);
;;;105        RETURN_ON_ERROR_NOT_INVALID_PARAM(err_code);
;;;106    
;;;107        return NRF_SUCCESS;
;;;108    }
000018  bd10              POP      {r4,pc}
                  |L5.26|
00001a  bf00              NOP                            ;95
00001c  2207              MOVS     r2,#7                 ;97
00001e  2102              MOVS     r1,#2                 ;97
000020  2001              MOVS     r0,#1                 ;97
000022  f7fffffe          BL       bsp_event_to_button_action_assign
000026  4604              MOV      r4,r0                 ;97
000028  bf00              NOP                            ;100
00002a  b11c              CBZ      r4,|L5.52|
00002c  2c07              CMP      r4,#7                 ;100
00002e  d001              BEQ      |L5.52|
000030  4620              MOV      r0,r4                 ;100
000032  e7f1              B        |L5.24|
                  |L5.52|
000034  bf00              NOP                            ;100
000036  2204              MOVS     r2,#4                 ;102
000038  2102              MOVS     r1,#2                 ;102
00003a  2000              MOVS     r0,#0                 ;102
00003c  f7fffffe          BL       bsp_event_to_button_action_assign
000040  4604              MOV      r4,r0                 ;102
000042  bf00              NOP                            ;105
000044  b11c              CBZ      r4,|L5.78|
000046  2c07              CMP      r4,#7                 ;105
000048  d001              BEQ      |L5.78|
00004a  4620              MOV      r0,r4                 ;105
00004c  e7e4              B        |L5.24|
                  |L5.78|
00004e  bf00              NOP                            ;105
000050  2000              MOVS     r0,#0                 ;107
000052  e7e1              B        |L5.24|
;;;109    
                          ENDP


                          AREA ||i.startup_event_extract||, CODE, READONLY, ALIGN=1

                  startup_event_extract PROC
;;;149     */
;;;150    static uint32_t startup_event_extract(bsp_event_t * p_startup_event)
000000  b57c              PUSH     {r2-r6,lr}
;;;151    {
000002  4604              MOV      r4,r0
;;;152        uint32_t err_code;
;;;153        bool wakeup_button_is_pressed, bond_erase_button_is_pressed;
;;;154    
;;;155        // Read buttons
;;;156        err_code = bsp_button_is_pressed(BTN_ID_WAKEUP, &wakeup_button_is_pressed);
000004  a901              ADD      r1,sp,#4
000006  2000              MOVS     r0,#0
000008  f7fffffe          BL       bsp_button_is_pressed
00000c  4605              MOV      r5,r0
;;;157        RETURN_ON_ERROR(err_code);
00000e  bf00              NOP      
000010  b10d              CBZ      r5,|L6.22|
000012  4628              MOV      r0,r5
                  |L6.20|
;;;158    
;;;159        err_code = bsp_button_is_pressed(BTN_ID_WAKEUP_BOND_DELETE, &bond_erase_button_is_pressed);
;;;160        RETURN_ON_ERROR(err_code);
;;;161    
;;;162        // React to button states
;;;163        if (bond_erase_button_is_pressed)
;;;164        {
;;;165            *p_startup_event = BSP_EVENT_CLEAR_BONDING_DATA;
;;;166        }
;;;167        else if (wakeup_button_is_pressed)
;;;168        {
;;;169            *p_startup_event = BSP_EVENT_WAKEUP;
;;;170        }
;;;171        else
;;;172        {
;;;173            *p_startup_event = BSP_EVENT_NOTHING;
;;;174        }
;;;175    
;;;176        return NRF_SUCCESS;
;;;177    }
000014  bd7c              POP      {r2-r6,pc}
                  |L6.22|
000016  bf00              NOP                            ;157
000018  4669              MOV      r1,sp                 ;159
00001a  2001              MOVS     r0,#1                 ;159
00001c  f7fffffe          BL       bsp_button_is_pressed
000020  4605              MOV      r5,r0                 ;159
000022  bf00              NOP                            ;160
000024  b10d              CBZ      r5,|L6.42|
000026  4628              MOV      r0,r5                 ;160
000028  e7f4              B        |L6.20|
                  |L6.42|
00002a  bf00              NOP                            ;160
00002c  f89d0000          LDRB     r0,[sp,#0]            ;163
000030  b110              CBZ      r0,|L6.56|
000032  2002              MOVS     r0,#2                 ;165
000034  7020              STRB     r0,[r4,#0]            ;165
000036  e007              B        |L6.72|
                  |L6.56|
000038  f89d0004          LDRB     r0,[sp,#4]            ;167
00003c  b110              CBZ      r0,|L6.68|
00003e  200b              MOVS     r0,#0xb               ;169
000040  7020              STRB     r0,[r4,#0]            ;169
000042  e001              B        |L6.72|
                  |L6.68|
000044  2000              MOVS     r0,#0                 ;173
000046  7020              STRB     r0,[r4,#0]            ;173
                  |L6.72|
000048  2000              MOVS     r0,#0                 ;176
00004a  e7e3              B        |L6.20|
;;;178    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  m_error_handler
                          DCD      0x00000000
                  m_num_connections
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\bsp\\bsp_btn_ble.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_btn_ble_c_4c67689d____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___13_bsp_btn_ble_c_4c67689d____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_btn_ble_c_4c67689d____REVSH|
#line 402
|__asm___13_bsp_btn_ble_c_4c67689d____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_btn_ble_c_4c67689d____RRX|
#line 587
|__asm___13_bsp_btn_ble_c_4c67689d____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
