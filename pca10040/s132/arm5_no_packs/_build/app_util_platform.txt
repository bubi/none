; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\_build\app_util_platform.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\app_util_platform.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\config\bluetoothds_template_pca10040_s132 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_dtm -I..\..\..\..\..\..\components\ble\ble_racp -I..\..\..\..\..\..\components\ble\ble_services\ble_ancs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_ans_c -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\ble\ble_services\ble_cscs -I..\..\..\..\..\..\components\ble\ble_services\ble_cts_c -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_gls -I..\..\..\..\..\..\components\ble\ble_services\ble_hids -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_hts -I..\..\..\..\..\..\components\ble\ble_services\ble_ias -I..\..\..\..\..\..\components\ble\ble_services\ble_ias_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lls -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\ble\ble_services\ble_nus_c -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_tps -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_qwr -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\drivers_nrf\adc -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\comp -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\i2s -I..\..\..\..\..\..\components\drivers_nrf\lpcomp -I..\..\..\..\..\..\components\drivers_nrf\pdm -I..\..\..\..\..\..\components\drivers_nrf\ppi -I..\..\..\..\..\..\components\drivers_nrf\pwm -I..\..\..\..\..\..\components\drivers_nrf\qdec -I..\..\..\..\..\..\components\drivers_nrf\rng -I..\..\..\..\..\..\components\drivers_nrf\rtc -I..\..\..\..\..\..\components\drivers_nrf\saadc -I..\..\..\..\..\..\components\drivers_nrf\spi_master -I..\..\..\..\..\..\components\drivers_nrf\spi_slave -I..\..\..\..\..\..\components\drivers_nrf\swi -I..\..\..\..\..\..\components\drivers_nrf\timer -I..\..\..\..\..\..\components\drivers_nrf\twi_master -I..\..\..\..\..\..\components\drivers_nrf\twis_slave -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\drivers_nrf\wdt -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\crc32 -I..\..\..\..\..\..\components\libraries\csense -I..\..\..\..\..\..\components\libraries\csense_drv -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fifo -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\hardfault -I..\..\..\..\..\..\components\libraries\hci -I..\..\..\..\..\..\components\libraries\led_softblink -I..\..\..\..\..\..\components\libraries\log -I..\..\..\..\..\..\components\libraries\log\src -I..\..\..\..\..\..\components\libraries\low_power_pwm -I..\..\..\..\..\..\components\libraries\mailbox -I..\..\..\..\..\..\components\libraries\mem_manager -I..\..\..\..\..\..\components\libraries\pwm -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\slip -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\twi -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common\softdevice_handler -I..\..\..\..\..\..\components\softdevice\s132\headers -I..\..\..\..\..\..\components\softdevice\s132\headers\nrf52 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\bsp -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\none -I..\..\..\..\..\..\components\drivers_ext\LS013B7DH06 -I..\..\..\..\..\..\external\ugfx -I..\..\..\..\..\..\external\ugfx\drivers\gdisp\framebuffer -I..\..\..\..\..\..\external\ugfx\src\gdisp -I..\..\..\..\..\..\external\ugfx\drivers\gdisp\ -IC:\Users\Michael\Documents\none\nRF5_SDK_12.1.0_0d23e2a\examples\ble_peripheral\none\pca10040\s132\arm5_no_packs\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.9.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=521 -D_RTE_ -DNRF52 -DBLE_STACK_SUPPORT_REQD -D__HEAP_SIZE=0 -DS132 -DNRF_SD_BLE_API_VERSION=3 -DBOARD_PCA10040 -DNRF52_PAN_12 -DNRF52_PAN_15 -DNRF52_PAN_20 -DNRF52_PAN_30 -DNRF52_PAN_31 -DNRF52_PAN_36 -DNRF52_PAN_51 -DNRF52_PAN_53 -DNRF52_PAN_54 -DNRF52_PAN_55 -DNRF52_PAN_58 -DNRF52_PAN_62 -DNRF52_PAN_63 -DNRF52_PAN_64 -DCONFIG_GPIO_AS_PINRESET -DSOFTDEVICE_PRESENT -DNRF52832 -DNRF52 -DSWI_DISABLE0 --omf_browse=.\_build\app_util_platform.crf ..\..\..\..\..\..\components\libraries\util\app_util_platform.c]
                          THUMB

                          AREA ||i.__sd_nvic_irq_disable||, CODE, READONLY, ALIGN=1

                  __sd_nvic_irq_disable PROC
;;;143     */
;;;144    static inline int __sd_nvic_irq_disable(void)
000000  bf00              NOP      
000002  f3ef8110          MRS      r1,PRIMASK
;;;145    {
;;;146      int pm = __get_PRIMASK();
000006  4608              MOV      r0,r1
;;;147      __disable_irq();
000008  b672              CPSID    i
;;;148      return pm;
;;;149    }
00000a  4770              BX       lr
;;;150    
                          ENDP


                          AREA ||i.app_util_critical_region_enter||, CODE, READONLY, ALIGN=1

                  app_util_critical_region_enter PROC
;;;36     
;;;37     void app_util_critical_region_enter(uint8_t *p_nested)
000000  b510              PUSH     {r4,lr}
;;;38     {
000002  4604              MOV      r4,r0
;;;39     #if __CORTEX_M == (0x04U)
;;;40         ASSERT(APP_LEVEL_PRIVILEGED == privilege_level_get())
;;;41     #endif
;;;42     
;;;43     #if defined(SOFTDEVICE_PRESENT)
;;;44         /* return value can be safely ignored */
;;;45         (void) sd_nvic_critical_region_enter(p_nested);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       sd_nvic_critical_region_enter
;;;46     #else
;;;47         app_util_disable_irq();
;;;48     #endif
;;;49     }
00000a  bd10              POP      {r4,pc}
;;;50     
                          ENDP


                          AREA ||i.app_util_critical_region_exit||, CODE, READONLY, ALIGN=2

                  app_util_critical_region_exit PROC
;;;50     
;;;51     void app_util_critical_region_exit(uint8_t nested)
000000  b570              PUSH     {r4-r6,lr}
;;;52     {
000002  4604              MOV      r4,r0
;;;53     #if __CORTEX_M == (0x04U)
;;;54         ASSERT(APP_LEVEL_PRIVILEGED == privilege_level_get())
;;;55     #endif
;;;56     
;;;57     #if defined(SOFTDEVICE_PRESENT)
;;;58         /* return value can be safely ignored */
;;;59         (void) sd_nvic_critical_region_exit(nested);
000004  4625              MOV      r5,r4
000006  480e              LDR      r0,|L3.64|
000008  6880              LDR      r0,[r0,#8]  ; nrf_nvic_state
00000a  b1b0              CBZ      r0,|L3.58|
00000c  b9ad              CBNZ     r5,|L3.58|
00000e  f7fffffe          BL       __sd_nvic_irq_disable
000012  4606              MOV      r6,r0
000014  480a              LDR      r0,|L3.64|
000016  6800              LDR      r0,[r0,#0]  ; nrf_nvic_state
000018  490a              LDR      r1,|L3.68|
00001a  6008              STR      r0,[r1,#0]
00001c  4808              LDR      r0,|L3.64|
00001e  6840              LDR      r0,[r0,#4]  ; nrf_nvic_state
000020  f04f21e0          MOV      r1,#0xe000e000
000024  f8c10104          STR      r0,[r1,#0x104]
000028  2000              MOVS     r0,#0
00002a  4905              LDR      r1,|L3.64|
00002c  6088              STR      r0,[r1,#8]  ; nrf_nvic_state
00002e  b91e              CBNZ     r6,|L3.56|
000030  bf00              NOP      
000032  b662              CPSIE    i
000034  bf00              NOP      
000036  bf00              NOP      
                  |L3.56|
000038  bf00              NOP      
                  |L3.58|
00003a  bf00              NOP      
;;;60     #else
;;;61         app_util_enable_irq();
;;;62     #endif
;;;63     }
00003c  bd70              POP      {r4-r6,pc}
;;;64     
                          ENDP

00003e  0000              DCW      0x0000
                  |L3.64|
                          DCD      nrf_nvic_state
                  |L3.68|
                          DCD      0xe000e100

                          AREA ||i.app_util_disable_irq||, CODE, READONLY, ALIGN=2

                  app_util_disable_irq PROC
;;;21     
;;;22     void app_util_disable_irq(void)
000000  b672              CPSID    i
;;;23     {
;;;24         __disable_irq();
;;;25         m_in_critical_region++;
000002  4803              LDR      r0,|L4.16|
000004  6800              LDR      r0,[r0,#0]  ; m_in_critical_region
000006  1c40              ADDS     r0,r0,#1
000008  4901              LDR      r1,|L4.16|
00000a  6008              STR      r0,[r1,#0]  ; m_in_critical_region
;;;26     }
00000c  4770              BX       lr
;;;27     
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      m_in_critical_region

                          AREA ||i.app_util_enable_irq||, CODE, READONLY, ALIGN=2

                  app_util_enable_irq PROC
;;;27     
;;;28     void app_util_enable_irq(void)
000000  4804              LDR      r0,|L5.20|
;;;29     {
;;;30         m_in_critical_region--;
000002  6800              LDR      r0,[r0,#0]  ; m_in_critical_region
000004  1e40              SUBS     r0,r0,#1
000006  4903              LDR      r1,|L5.20|
000008  6008              STR      r0,[r1,#0]  ; m_in_critical_region
;;;31         if (m_in_critical_region == 0)
00000a  4608              MOV      r0,r1
00000c  6800              LDR      r0,[r0,#0]  ; m_in_critical_region
00000e  b900              CBNZ     r0,|L5.18|
;;;32         {
;;;33             __enable_irq();
000010  b662              CPSIE    i
                  |L5.18|
;;;34         }
;;;35     }
000012  4770              BX       lr
;;;36     
                          ENDP

                  |L5.20|
                          DCD      m_in_critical_region

                          AREA ||i.sd_nvic_critical_region_enter||, CODE, READONLY, ALIGN=2

                  sd_nvic_critical_region_enter PROC
;;;424     */
;;;425    static inline uint32_t sd_nvic_critical_region_enter(uint8_t * p_is_nested_critical_region)
000000  b570              PUSH     {r4-r6,lr}
;;;426    {
000002  4604              MOV      r4,r0
;;;427      int was_masked = __sd_nvic_irq_disable();
000004  f7fffffe          BL       __sd_nvic_irq_disable
000008  4605              MOV      r5,r0
;;;428      if (!nrf_nvic_state.__cr_flag)
00000a  4814              LDR      r0,|L6.92|
00000c  6880              LDR      r0,[r0,#8]  ; nrf_nvic_state
00000e  b9d8              CBNZ     r0,|L6.72|
;;;429      {
;;;430        nrf_nvic_state.__cr_flag = 1;
000010  2001              MOVS     r0,#1
000012  4912              LDR      r1,|L6.92|
000014  6088              STR      r0,[r1,#8]  ; nrf_nvic_state
;;;431        nrf_nvic_state.__irq_masks[0] = ( NVIC->ICER[0] & __NRF_NVIC_APP_IRQS_0 );
000016  4812              LDR      r0,|L6.96|
000018  6800              LDR      r0,[r0,#0]
00001a  4912              LDR      r1,|L6.100|
00001c  4008              ANDS     r0,r0,r1
00001e  490f              LDR      r1,|L6.92|
000020  6008              STR      r0,[r1,#0]  ; nrf_nvic_state
;;;432        NVIC->ICER[0] = __NRF_NVIC_APP_IRQS_0;
000022  4810              LDR      r0,|L6.100|
000024  f04f21e0          MOV      r1,#0xe000e000
000028  f8c10180          STR      r0,[r1,#0x180]
;;;433        #ifdef NRF52
;;;434        nrf_nvic_state.__irq_masks[1] = ( NVIC->ICER[1] & __NRF_NVIC_APP_IRQS_1 );
00002c  480c              LDR      r0,|L6.96|
00002e  3880              SUBS     r0,r0,#0x80
000030  f8d00084          LDR      r0,[r0,#0x84]
000034  4909              LDR      r1,|L6.92|
000036  6048              STR      r0,[r1,#4]  ; nrf_nvic_state
;;;435        NVIC->ICER[1] = __NRF_NVIC_APP_IRQS_1;
000038  f04f31ff          MOV      r1,#0xffffffff
00003c  4808              LDR      r0,|L6.96|
00003e  1d00              ADDS     r0,r0,#4
000040  6001              STR      r1,[r0,#0]
;;;436        #endif
;;;437        *p_is_nested_critical_region = 0;
000042  2000              MOVS     r0,#0
000044  7020              STRB     r0,[r4,#0]
000046  e001              B        |L6.76|
                  |L6.72|
;;;438      }
;;;439      else
;;;440      {
;;;441        *p_is_nested_critical_region = 1;
000048  2001              MOVS     r0,#1
00004a  7020              STRB     r0,[r4,#0]
                  |L6.76|
;;;442      }
;;;443      if (!was_masked)
00004c  b91d              CBNZ     r5,|L6.86|
;;;444      {
;;;445        __sd_nvic_irq_enable();
00004e  bf00              NOP      
000050  b662              CPSIE    i
000052  bf00              NOP      
000054  bf00              NOP      
                  |L6.86|
;;;446      }
;;;447      return NRF_SUCCESS;
000056  2000              MOVS     r0,#0
;;;448    }
000058  bd70              POP      {r4-r6,pc}
;;;449    
                          ENDP

00005a  0000              DCW      0x0000
                  |L6.92|
                          DCD      nrf_nvic_state
                  |L6.96|
                          DCD      0xe000e180
                  |L6.100|
                          DCD      0xbcff06fc

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  nrf_nvic_state
                          %        12

                          AREA ||.data||, DATA, ALIGN=2

                  m_in_critical_region
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\libraries\\util\\app_util_platform.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_app_util_platform_c_6d89e7e5____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___19_app_util_platform_c_6d89e7e5____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_app_util_platform_c_6d89e7e5____REVSH|
#line 402
|__asm___19_app_util_platform_c_6d89e7e5____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_app_util_platform_c_6d89e7e5____RRX|
#line 587
|__asm___19_app_util_platform_c_6d89e7e5____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
