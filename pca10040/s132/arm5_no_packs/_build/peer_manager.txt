; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\_build\peer_manager.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\peer_manager.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\config\bluetoothds_template_pca10040_s132 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_dtm -I..\..\..\..\..\..\components\ble\ble_racp -I..\..\..\..\..\..\components\ble\ble_services\ble_ancs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_ans_c -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\ble\ble_services\ble_cscs -I..\..\..\..\..\..\components\ble\ble_services\ble_cts_c -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_gls -I..\..\..\..\..\..\components\ble\ble_services\ble_hids -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_hts -I..\..\..\..\..\..\components\ble\ble_services\ble_ias -I..\..\..\..\..\..\components\ble\ble_services\ble_ias_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lls -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\ble\ble_services\ble_nus_c -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_tps -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_qwr -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\drivers_nrf\adc -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\comp -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\i2s -I..\..\..\..\..\..\components\drivers_nrf\lpcomp -I..\..\..\..\..\..\components\drivers_nrf\pdm -I..\..\..\..\..\..\components\drivers_nrf\ppi -I..\..\..\..\..\..\components\drivers_nrf\pwm -I..\..\..\..\..\..\components\drivers_nrf\qdec -I..\..\..\..\..\..\components\drivers_nrf\rng -I..\..\..\..\..\..\components\drivers_nrf\rtc -I..\..\..\..\..\..\components\drivers_nrf\saadc -I..\..\..\..\..\..\components\drivers_nrf\spi_master -I..\..\..\..\..\..\components\drivers_nrf\spi_slave -I..\..\..\..\..\..\components\drivers_nrf\swi -I..\..\..\..\..\..\components\drivers_nrf\timer -I..\..\..\..\..\..\components\drivers_nrf\twi_master -I..\..\..\..\..\..\components\drivers_nrf\twis_slave -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\drivers_nrf\wdt -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\crc32 -I..\..\..\..\..\..\components\libraries\csense -I..\..\..\..\..\..\components\libraries\csense_drv -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fifo -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\hardfault -I..\..\..\..\..\..\components\libraries\hci -I..\..\..\..\..\..\components\libraries\led_softblink -I..\..\..\..\..\..\components\libraries\log -I..\..\..\..\..\..\components\libraries\log\src -I..\..\..\..\..\..\components\libraries\low_power_pwm -I..\..\..\..\..\..\components\libraries\mailbox -I..\..\..\..\..\..\components\libraries\mem_manager -I..\..\..\..\..\..\components\libraries\pwm -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\slip -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\twi -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common\softdevice_handler -I..\..\..\..\..\..\components\softdevice\s132\headers -I..\..\..\..\..\..\components\softdevice\s132\headers\nrf52 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\bsp -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\none -I..\..\..\..\..\..\components\drivers_ext\LS013B7DH06 -I..\..\..\..\..\..\external\ugfx -I..\..\..\..\..\..\external\ugfx\drivers\gdisp\framebuffer -I..\..\..\..\..\..\external\ugfx\src\gdisp -I..\..\..\..\..\..\external\ugfx\drivers\gdisp\ -IC:\Users\Michael\Documents\none\nRF5_SDK_12.1.0_0d23e2a\examples\ble_peripheral\none\pca10040\s132\arm5_no_packs\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.9.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=521 -D_RTE_ -DNRF52 -DBLE_STACK_SUPPORT_REQD -D__HEAP_SIZE=0 -DS132 -DNRF_SD_BLE_API_VERSION=3 -DBOARD_PCA10040 -DNRF52_PAN_12 -DNRF52_PAN_15 -DNRF52_PAN_20 -DNRF52_PAN_30 -DNRF52_PAN_31 -DNRF52_PAN_36 -DNRF52_PAN_51 -DNRF52_PAN_53 -DNRF52_PAN_54 -DNRF52_PAN_55 -DNRF52_PAN_58 -DNRF52_PAN_62 -DNRF52_PAN_63 -DNRF52_PAN_64 -DCONFIG_GPIO_AS_PINRESET -DSOFTDEVICE_PRESENT -DNRF52832 -DNRF52 -DSWI_DISABLE0 --omf_browse=.\_build\peer_manager.crf ..\..\..\..\..\..\components\ble\peer_manager\peer_manager.c]
                          THUMB

                          AREA ||i.evt_send||, CODE, READONLY, ALIGN=2

                  evt_send PROC
;;;51      */
;;;52     static void evt_send(pm_evt_t * p_pm_evt)
000000  b570              PUSH     {r4-r6,lr}
;;;53     {
000002  4605              MOV      r5,r0
;;;54         for (int i = 0; i < m_n_registrants; i++)
000004  2400              MOVS     r4,#0
000006  e005              B        |L1.20|
                  |L1.8|
;;;55         {
;;;56             m_evt_handlers[i](p_pm_evt);
000008  4805              LDR      r0,|L1.32|
00000a  f8501024          LDR      r1,[r0,r4,LSL #2]
00000e  4628              MOV      r0,r5
000010  4788              BLX      r1
000012  1c64              ADDS     r4,r4,#1              ;54
                  |L1.20|
000014  4803              LDR      r0,|L1.36|
000016  7800              LDRB     r0,[r0,#0]            ;54  ; m_n_registrants
000018  4284              CMP      r4,r0                 ;54
00001a  dbf5              BLT      |L1.8|
;;;57         }
;;;58     }
00001c  bd70              POP      {r4-r6,pc}
;;;59     
                          ENDP

00001e  0000              DCW      0x0000
                  |L1.32|
                          DCD      m_evt_handlers
                  |L1.36|
                          DCD      m_n_registrants

                          AREA ||i.internal_state_reset||, CODE, READONLY, ALIGN=2

                  internal_state_reset PROC
;;;456     */
;;;457    static void internal_state_reset()
000000  f64f70ff          MOV      r0,#0xffff
;;;458    {
;;;459        m_highest_ranked_peer = PM_PEER_ID_INVALID;
000004  4905              LDR      r1,|L2.28|
000006  8008              STRH     r0,[r1,#0]
;;;460        m_peer_rank_token     = PM_STORE_TOKEN_INVALID;
000008  2000              MOVS     r0,#0
00000a  4905              LDR      r1,|L2.32|
00000c  6008              STR      r0,[r1,#0]  ; m_peer_rank_token
;;;461        m_pairing_flag_id     = BLE_CONN_STATE_USER_FLAG_INVALID;
00000e  2018              MOVS     r0,#0x18
000010  4904              LDR      r1,|L2.36|
000012  7008              STRB     r0,[r1,#0]
;;;462        m_bonding_flag_id     = BLE_CONN_STATE_USER_FLAG_INVALID;
000014  4904              LDR      r1,|L2.40|
000016  7008              STRB     r0,[r1,#0]
;;;463    }
000018  4770              BX       lr
;;;464    
                          ENDP

00001a  0000              DCW      0x0000
                  |L2.28|
                          DCD      m_highest_ranked_peer
                  |L2.32|
                          DCD      m_peer_rank_token
                  |L2.36|
                          DCD      m_pairing_flag_id
                  |L2.40|
                          DCD      m_bonding_flag_id

                          AREA ||i.pm_conn_handle_get||, CODE, READONLY, ALIGN=2

                  pm_conn_handle_get PROC
;;;688    
;;;689    ret_code_t pm_conn_handle_get(pm_peer_id_t peer_id, uint16_t * p_conn_handle)
000000  b570              PUSH     {r4-r6,lr}
;;;690    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;691        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4808              LDR      r0,|L3.44|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b908              CBNZ     r0,|L3.18|
00000e  2008              MOVS     r0,#8
                  |L3.16|
;;;692        VERIFY_PARAM_NOT_NULL(p_conn_handle);
;;;693        *p_conn_handle = im_conn_handle_get(peer_id);
;;;694        return NRF_SUCCESS;
;;;695    }
000010  bd70              POP      {r4-r6,pc}
                  |L3.18|
000012  bf00              NOP                            ;691
000014  bf00              NOP                            ;692
000016  b90c              CBNZ     r4,|L3.28|
000018  200e              MOVS     r0,#0xe               ;692
00001a  e7f9              B        |L3.16|
                  |L3.28|
00001c  bf00              NOP                            ;692
00001e  4628              MOV      r0,r5                 ;693
000020  f7fffffe          BL       im_conn_handle_get
000024  8020              STRH     r0,[r4,#0]            ;693
000026  2000              MOVS     r0,#0                 ;694
000028  e7f2              B        |L3.16|
;;;696    
                          ENDP

00002a  0000              DCW      0x0000
                  |L3.44|
                          DCD      m_module_initialized

                          AREA ||i.pm_conn_sec_config_reply||, CODE, READONLY, ALIGN=1

                  pm_conn_sec_config_reply PROC
;;;574    
;;;575    void pm_conn_sec_config_reply(uint16_t conn_handle, pm_conn_sec_config_t * p_conn_sec_config)
000000  b570              PUSH     {r4-r6,lr}
;;;576    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;577        sm_conn_sec_config_reply(conn_handle, p_conn_sec_config);
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       sm_conn_sec_config_reply
;;;578    }
00000e  bd70              POP      {r4-r6,pc}
;;;579    
                          ENDP


                          AREA ||i.pm_conn_sec_status_get||, CODE, READONLY, ALIGN=2

                  pm_conn_sec_status_get PROC
;;;661    
;;;662    ret_code_t pm_conn_sec_status_get(uint16_t conn_handle, pm_conn_sec_status_t * p_conn_sec_status)
000000  b570              PUSH     {r4-r6,lr}
;;;663    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;664        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  481a              LDR      r0,|L5.116|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b908              CBNZ     r0,|L5.18|
00000e  2008              MOVS     r0,#8
                  |L5.16|
;;;665        VERIFY_PARAM_NOT_NULL(p_conn_sec_status);
;;;666    
;;;667        ble_conn_state_status_t status = ble_conn_state_status(conn_handle);
;;;668    
;;;669        if (status == BLE_CONN_STATUS_INVALID)
;;;670        {
;;;671            return BLE_ERROR_INVALID_CONN_HANDLE;
;;;672        }
;;;673    
;;;674        p_conn_sec_status->connected      = (status == BLE_CONN_STATUS_CONNECTED);
;;;675        p_conn_sec_status->bonded         = ble_conn_state_user_flag_get(conn_handle, m_bonding_flag_id);
;;;676        p_conn_sec_status->encrypted      = ble_conn_state_encrypted(conn_handle);
;;;677        p_conn_sec_status->mitm_protected = ble_conn_state_mitm_protected(conn_handle);
;;;678        return NRF_SUCCESS;
;;;679    }
000010  bd70              POP      {r4-r6,pc}
                  |L5.18|
000012  bf00              NOP                            ;664
000014  bf00              NOP                            ;665
000016  b90c              CBNZ     r4,|L5.28|
000018  200e              MOVS     r0,#0xe               ;665
00001a  e7f9              B        |L5.16|
                  |L5.28|
00001c  bf00              NOP                            ;665
00001e  4630              MOV      r0,r6                 ;667
000020  f7fffffe          BL       ble_conn_state_status
000024  4605              MOV      r5,r0                 ;667
000026  b915              CBNZ     r5,|L5.46|
000028  f2430002          MOV      r0,#0x3002            ;671
00002c  e7f0              B        |L5.16|
                  |L5.46|
00002e  2d02              CMP      r5,#2                 ;674
000030  d101              BNE      |L5.54|
000032  2001              MOVS     r0,#1                 ;674
000034  e000              B        |L5.56|
                  |L5.54|
000036  2000              MOVS     r0,#0                 ;674
                  |L5.56|
000038  7821              LDRB     r1,[r4,#0]            ;674
00003a  f3600100          BFI      r1,r0,#0,#1           ;674
00003e  7021              STRB     r1,[r4,#0]            ;674
000040  480d              LDR      r0,|L5.120|
000042  7801              LDRB     r1,[r0,#0]            ;675  ; m_bonding_flag_id
000044  4630              MOV      r0,r6                 ;675
000046  f7fffffe          BL       ble_conn_state_user_flag_get
00004a  7821              LDRB     r1,[r4,#0]            ;675
00004c  f36001c3          BFI      r1,r0,#3,#1           ;675
000050  7021              STRB     r1,[r4,#0]            ;675
000052  4630              MOV      r0,r6                 ;676
000054  f7fffffe          BL       ble_conn_state_encrypted
000058  7821              LDRB     r1,[r4,#0]            ;676
00005a  f3600141          BFI      r1,r0,#1,#1           ;676
00005e  7021              STRB     r1,[r4,#0]            ;676
000060  4630              MOV      r0,r6                 ;677
000062  f7fffffe          BL       ble_conn_state_mitm_protected
000066  7821              LDRB     r1,[r4,#0]            ;677
000068  f3600182          BFI      r1,r0,#2,#1           ;677
00006c  7021              STRB     r1,[r4,#0]            ;677
00006e  2000              MOVS     r0,#0                 ;678
000070  e7ce              B        |L5.16|
;;;680    
                          ENDP

000072  0000              DCW      0x0000
                  |L5.116|
                          DCD      m_module_initialized
                  |L5.120|
                          DCD      m_bonding_flag_id

                          AREA ||i.pm_conn_secure||, CODE, READONLY, ALIGN=2

                  pm_conn_secure PROC
;;;562    
;;;563    ret_code_t pm_conn_secure(uint16_t conn_handle, bool force_repairing)
000000  b570              PUSH     {r4-r6,lr}
;;;564    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;565        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4806              LDR      r0,|L6.36|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b908              CBNZ     r0,|L6.18|
00000e  2008              MOVS     r0,#8
                  |L6.16|
;;;566    
;;;567        ret_code_t err_code;
;;;568    
;;;569        err_code = sm_link_secure(conn_handle, force_repairing);
;;;570    
;;;571        return err_code;
;;;572    }
000010  bd70              POP      {r4-r6,pc}
                  |L6.18|
000012  bf00              NOP                            ;565
000014  4629              MOV      r1,r5                 ;569
000016  4620              MOV      r0,r4                 ;569
000018  f7fffffe          BL       sm_link_secure
00001c  4606              MOV      r6,r0                 ;569
00001e  4630              MOV      r0,r6                 ;571
000020  e7f6              B        |L6.16|
;;;573    
                          ENDP

000022  0000              DCW      0x0000
                  |L6.36|
                          DCD      m_module_initialized

                          AREA ||i.pm_device_identities_list_set||, CODE, READONLY, ALIGN=2

                  pm_device_identities_list_set PROC
;;;653    
;;;654    ret_code_t pm_device_identities_list_set(pm_peer_id_t const * p_peers,
000000  b570              PUSH     {r4-r6,lr}
;;;655                                             uint32_t             peer_cnt)
;;;656    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;657        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4805              LDR      r0,|L7.32|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b908              CBNZ     r0,|L7.18|
00000e  2008              MOVS     r0,#8
                  |L7.16|
;;;658        return im_device_identities_list_set(p_peers, peer_cnt);
;;;659    }
000010  bd70              POP      {r4-r6,pc}
                  |L7.18|
000012  bf00              NOP                            ;657
000014  4629              MOV      r1,r5                 ;658
000016  4620              MOV      r0,r4                 ;658
000018  f7fffffe          BL       im_device_identities_list_set
00001c  e7f8              B        |L7.16|
;;;660    
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      m_module_initialized

                          AREA ||i.pm_gcm_evt_handler||, CODE, READONLY, ALIGN=1

                  pm_gcm_evt_handler PROC
;;;346     */
;;;347    void pm_gcm_evt_handler(gcm_evt_t const * p_gcm_evt)
000000  b530              PUSH     {r4,r5,lr}
;;;348    {
000002  b085              SUB      sp,sp,#0x14
000004  4604              MOV      r4,r0
;;;349        bool send_evt = true;
000006  2501              MOVS     r5,#1
;;;350        pm_evt_t pm_evt;
;;;351    
;;;352        memset(&pm_evt, 0, sizeof(pm_evt_t));
000008  2114              MOVS     r1,#0x14
00000a  4668              MOV      r0,sp
00000c  f7fffffe          BL       __aeabi_memclr4
;;;353        pm_evt.peer_id = p_gcm_evt->peer_id;
000010  8860              LDRH     r0,[r4,#2]
000012  f8ad0004          STRH     r0,[sp,#4]
;;;354        pm_evt.conn_handle = im_conn_handle_get(pm_evt.peer_id);
000016  f8bd0004          LDRH     r0,[sp,#4]
00001a  f7fffffe          BL       im_conn_handle_get
00001e  f8ad0002          STRH     r0,[sp,#2]
;;;355    
;;;356        switch (p_gcm_evt->evt_id)
000022  7820              LDRB     r0,[r4,#0]
000024  280a              CMP      r0,#0xa
000026  d243              BCS      |L8.176|
000028  e8dff000          TBB      [pc,r0]
00002c  050f191d          DCB      0x05,0x0f,0x19,0x1d
000030  212b2f33          DCB      0x21,0x2b,0x2f,0x33
000034  3539              DCB      0x35,0x39
;;;357        {
;;;358            case GCM_EVT_LOCAL_DB_CACHE_STORED:
;;;359                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
000036  2007              MOVS     r0,#7
000038  f88d0000          STRB     r0,[sp,#0]
;;;360                pm_evt.params.peer_data_update_succeeded.action = PM_PEER_DATA_OP_UPDATE;
00003c  2100              MOVS     r1,#0
00003e  f88d1009          STRB     r1,[sp,#9]
;;;361                pm_evt.params.peer_data_update_succeeded.data_id =  PM_PEER_DATA_ID_GATT_LOCAL;
000042  2008              MOVS     r0,#8
000044  f88d0008          STRB     r0,[sp,#8]
;;;362                break;
000048  e032              B        |L8.176|
;;;363    
;;;364            case GCM_EVT_LOCAL_DB_CACHE_UPDATED:
;;;365                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
00004a  2007              MOVS     r0,#7
00004c  f88d0000          STRB     r0,[sp,#0]
;;;366                pm_evt.params.peer_data_update_succeeded.action = PM_PEER_DATA_OP_UPDATE;
000050  2100              MOVS     r1,#0
000052  f88d1009          STRB     r1,[sp,#9]
;;;367                pm_evt.params.peer_data_update_succeeded.data_id =  PM_PEER_DATA_ID_GATT_LOCAL;
000056  2008              MOVS     r0,#8
000058  f88d0008          STRB     r0,[sp,#8]
;;;368                break;
00005c  e028              B        |L8.176|
;;;369    
;;;370            case GCM_EVT_LOCAL_DB_CACHE_APPLIED:
;;;371                pm_evt.evt_id = PM_EVT_LOCAL_DB_CACHE_APPLIED;
00005e  200d              MOVS     r0,#0xd
000060  f88d0000          STRB     r0,[sp,#0]
;;;372                break;
000064  e024              B        |L8.176|
;;;373    
;;;374            case GCM_EVT_ERROR_LOCAL_DB_CACHE_APPLY:
;;;375                pm_evt.evt_id = PM_EVT_LOCAL_DB_CACHE_APPLY_FAILED;
000066  200e              MOVS     r0,#0xe
000068  f88d0000          STRB     r0,[sp,#0]
;;;376                break;
00006c  e020              B        |L8.176|
;;;377    
;;;378            case GCM_EVT_REMOTE_DB_CACHE_UPDATED:
;;;379                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
00006e  2007              MOVS     r0,#7
000070  f88d0000          STRB     r0,[sp,#0]
;;;380                pm_evt.params.peer_data_update_succeeded.action = PM_PEER_DATA_OP_UPDATE;
000074  2100              MOVS     r1,#0
000076  f88d1009          STRB     r1,[sp,#9]
;;;381                pm_evt.params.peer_data_update_succeeded.data_id =  PM_PEER_DATA_ID_GATT_REMOTE;
00007a  2005              MOVS     r0,#5
00007c  f88d0008          STRB     r0,[sp,#8]
;;;382                break;
000080  e016              B        |L8.176|
;;;383    
;;;384            case GCM_EVT_SERVICE_CHANGED_IND_SENT:
;;;385                pm_evt.evt_id = PM_EVT_SERVICE_CHANGED_IND_SENT;
000082  200f              MOVS     r0,#0xf
000084  f88d0000          STRB     r0,[sp,#0]
;;;386                break;
000088  e012              B        |L8.176|
;;;387    
;;;388            case GCM_EVT_SERVICE_CHANGED_IND_CONFIRMED:
;;;389                pm_evt.evt_id = PM_EVT_SERVICE_CHANGED_IND_CONFIRMED;
00008a  2010              MOVS     r0,#0x10
00008c  f88d0000          STRB     r0,[sp,#0]
;;;390                break;
000090  e00e              B        |L8.176|
;;;391    
;;;392            case GCM_EVT_ERROR_DATA_SIZE:
;;;393                send_evt = false;
000092  2500              MOVS     r5,#0
;;;394                break;
000094  e00c              B        |L8.176|
;;;395    
;;;396            case GCM_EVT_ERROR_STORAGE_FULL:
;;;397                pm_evt.evt_id = PM_EVT_STORAGE_FULL;
000096  2005              MOVS     r0,#5
000098  f88d0000          STRB     r0,[sp,#0]
;;;398                break;
00009c  e008              B        |L8.176|
;;;399    
;;;400            case GCM_EVT_ERROR_UNEXPECTED:
;;;401                pm_evt.evt_id = PM_EVT_ERROR_UNEXPECTED;
00009e  2006              MOVS     r0,#6
0000a0  f88d0000          STRB     r0,[sp,#0]
;;;402                pm_evt.params.error_unexpected.error = p_gcm_evt->params.error_unexpected.error;
0000a4  68a0              LDR      r0,[r4,#8]
0000a6  9002              STR      r0,[sp,#8]
;;;403                pm_evt.conn_handle = p_gcm_evt->params.error_unexpected.conn_handle;
0000a8  88a0              LDRH     r0,[r4,#4]
0000aa  f8ad0002          STRH     r0,[sp,#2]
;;;404                break;
0000ae  bf00              NOP      
                  |L8.176|
0000b0  bf00              NOP                            ;362
;;;405        }
;;;406    
;;;407        if (send_evt)
0000b2  b115              CBZ      r5,|L8.186|
;;;408        {
;;;409            evt_send(&pm_evt);
0000b4  4668              MOV      r0,sp
0000b6  f7fffffe          BL       evt_send
                  |L8.186|
;;;410        }
;;;411    }
0000ba  b005              ADD      sp,sp,#0x14
0000bc  bd30              POP      {r4,r5,pc}
;;;412    
                          ENDP


                          AREA ||i.pm_id_addr_get||, CODE, READONLY, ALIGN=2

                  pm_id_addr_get PROC
;;;601    
;;;602    ret_code_t pm_id_addr_get(ble_gap_addr_t * p_addr)
000000  b510              PUSH     {r4,lr}
;;;603    {
000002  4604              MOV      r4,r0
;;;604        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4807              LDR      r0,|L9.36|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  b908              CBNZ     r0,|L9.16|
00000c  2008              MOVS     r0,#8
                  |L9.14|
;;;605        VERIFY_PARAM_NOT_NULL(p_addr);
;;;606        return im_id_addr_get(p_addr);
;;;607    }
00000e  bd10              POP      {r4,pc}
                  |L9.16|
000010  bf00              NOP                            ;604
000012  bf00              NOP                            ;605
000014  b90c              CBNZ     r4,|L9.26|
000016  200e              MOVS     r0,#0xe               ;605
000018  e7f9              B        |L9.14|
                  |L9.26|
00001a  bf00              NOP                            ;605
00001c  4620              MOV      r0,r4                 ;606
00001e  f7fffffe          BL       im_id_addr_get
000022  e7f4              B        |L9.14|
;;;608    
                          ENDP

                  |L9.36|
                          DCD      m_module_initialized

                          AREA ||i.pm_id_addr_set||, CODE, READONLY, ALIGN=2

                  pm_id_addr_set PROC
;;;594    
;;;595    ret_code_t pm_id_addr_set(ble_gap_addr_t const * p_addr)
000000  b510              PUSH     {r4,lr}
;;;596    {
000002  4604              MOV      r4,r0
;;;597        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4805              LDR      r0,|L10.28|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  b908              CBNZ     r0,|L10.16|
00000c  2008              MOVS     r0,#8
                  |L10.14|
;;;598        return im_id_addr_set(p_addr);
;;;599    }
00000e  bd10              POP      {r4,pc}
                  |L10.16|
000010  bf00              NOP                            ;597
000012  4620              MOV      r0,r4                 ;598
000014  f7fffffe          BL       im_id_addr_set
000018  e7f9              B        |L10.14|
;;;600    
                          ENDP

00001a  0000              DCW      0x0000
                  |L10.28|
                          DCD      m_module_initialized

                          AREA ||i.pm_im_evt_handler||, CODE, READONLY, ALIGN=2

                  pm_im_evt_handler PROC
;;;418     */
;;;419    void pm_im_evt_handler(im_evt_t const * p_im_evt)
000000  b530              PUSH     {r4,r5,lr}
;;;420    {
000002  b085              SUB      sp,sp,#0x14
000004  4604              MOV      r4,r0
;;;421        pm_evt_t pm_evt;
;;;422        ret_code_t err_code;
;;;423    
;;;424        switch (p_im_evt->evt_id)
000006  7820              LDRB     r0,[r4,#0]
000008  b110              CBZ      r0,|L11.16|
00000a  2801              CMP      r0,#1
00000c  d11e              BNE      |L11.76|
00000e  e004              B        |L11.26|
                  |L11.16|
;;;425        {
;;;426            case IM_EVT_DUPLICATE_ID:
;;;427                // Attempt to delete the duplicate data to free space and avoid finding old data when
;;;428                // scanning in the future
;;;429                err_code = pm_peer_delete(p_im_evt->params.duplicate_id.peer_id_2);
000010  88e0              LDRH     r0,[r4,#6]
000012  f7fffffe          BL       pm_peer_delete
000016  4605              MOV      r5,r0
;;;430                UNUSED_VARIABLE(err_code);
;;;431                break;
000018  e018              B        |L11.76|
                  |L11.26|
;;;432    
;;;433            case IM_EVT_BONDED_PEER_CONNECTED:
;;;434                ble_conn_state_user_flag_set(p_im_evt->conn_handle, m_bonding_flag_id, true);
00001a  8860              LDRH     r0,[r4,#2]
00001c  2201              MOVS     r2,#1
00001e  490d              LDR      r1,|L11.84|
000020  7809              LDRB     r1,[r1,#0]  ; m_bonding_flag_id
000022  f7fffffe          BL       ble_conn_state_user_flag_set
;;;435                memset(&pm_evt, 0, sizeof(pm_evt_t));
000026  2114              MOVS     r1,#0x14
000028  4668              MOV      r0,sp
00002a  f7fffffe          BL       __aeabi_memclr4
;;;436                pm_evt.conn_handle = p_im_evt->conn_handle;
00002e  8860              LDRH     r0,[r4,#2]
000030  f8ad0002          STRH     r0,[sp,#2]
;;;437                pm_evt.peer_id = im_peer_id_get_by_conn_handle(p_im_evt->conn_handle);
000034  8860              LDRH     r0,[r4,#2]
000036  f7fffffe          BL       im_peer_id_get_by_conn_handle
00003a  f8ad0004          STRH     r0,[sp,#4]
;;;438                pm_evt.evt_id = PM_EVT_BONDED_PEER_CONNECTED;
00003e  2000              MOVS     r0,#0
000040  f88d0000          STRB     r0,[sp,#0]
;;;439                evt_send(&pm_evt);
000044  4668              MOV      r0,sp
000046  f7fffffe          BL       evt_send
;;;440                break;
00004a  bf00              NOP      
                  |L11.76|
00004c  bf00              NOP                            ;431
;;;441        }
;;;442    }
00004e  b005              ADD      sp,sp,#0x14
000050  bd30              POP      {r4,r5,pc}
;;;443    
                          ENDP

000052  0000              DCW      0x0000
                  |L11.84|
                          DCD      m_bonding_flag_id

                          AREA ||i.pm_init||, CODE, READONLY, ALIGN=2

                  pm_init PROC
;;;465    
;;;466    ret_code_t pm_init(void)
000000  b510              PUSH     {r4,lr}
;;;467    {
;;;468        ret_code_t err_code;
;;;469    
;;;470        err_code = pds_init();
000002  f7fffffe          BL       pds_init
000006  4604              MOV      r4,r0
;;;471        if (err_code != NRF_SUCCESS)
000008  b10c              CBZ      r4,|L12.14|
;;;472        {
;;;473            return NRF_ERROR_INTERNAL;
00000a  2003              MOVS     r0,#3
                  |L12.12|
;;;474        }
;;;475    
;;;476        err_code = pdb_init();
;;;477        if (err_code != NRF_SUCCESS)
;;;478        {
;;;479            return NRF_ERROR_INTERNAL;
;;;480        }
;;;481    
;;;482        err_code = sm_init();
;;;483        if (err_code != NRF_SUCCESS)
;;;484        {
;;;485            return NRF_ERROR_INTERNAL;
;;;486        }
;;;487    
;;;488        err_code = smd_init();
;;;489        if (err_code != NRF_SUCCESS)
;;;490        {
;;;491            return NRF_ERROR_INTERNAL;
;;;492        }
;;;493    
;;;494        err_code = gcm_init();
;;;495        if (err_code != NRF_SUCCESS)
;;;496        {
;;;497            return NRF_ERROR_INTERNAL;
;;;498        }
;;;499    
;;;500        err_code = gscm_init();
;;;501        if (err_code != NRF_SUCCESS)
;;;502        {
;;;503            return NRF_ERROR_INTERNAL;
;;;504        }
;;;505    
;;;506        err_code = im_init();
;;;507        if (err_code != NRF_SUCCESS)
;;;508        {
;;;509            return NRF_ERROR_INTERNAL;
;;;510        }
;;;511    
;;;512        internal_state_reset();
;;;513    
;;;514        m_pairing_flag_id = ble_conn_state_user_flag_acquire();
;;;515        if (m_pairing_flag_id == BLE_CONN_STATE_USER_FLAG_INVALID)
;;;516        {
;;;517            return NRF_ERROR_INTERNAL;
;;;518        }
;;;519    
;;;520        m_bonding_flag_id = ble_conn_state_user_flag_acquire();
;;;521        if (m_bonding_flag_id == BLE_CONN_STATE_USER_FLAG_INVALID)
;;;522        {
;;;523            return NRF_ERROR_INTERNAL;
;;;524        }
;;;525    
;;;526        m_peer_rank_initialized = false;
;;;527        m_module_initialized    = true;
;;;528    
;;;529        return NRF_SUCCESS;
;;;530    }
00000c  bd10              POP      {r4,pc}
                  |L12.14|
00000e  f7fffffe          BL       pdb_init
000012  4604              MOV      r4,r0                 ;476
000014  b10c              CBZ      r4,|L12.26|
000016  2003              MOVS     r0,#3                 ;479
000018  e7f8              B        |L12.12|
                  |L12.26|
00001a  f7fffffe          BL       sm_init
00001e  4604              MOV      r4,r0                 ;482
000020  b10c              CBZ      r4,|L12.38|
000022  2003              MOVS     r0,#3                 ;485
000024  e7f2              B        |L12.12|
                  |L12.38|
000026  f7fffffe          BL       smd_init
00002a  4604              MOV      r4,r0                 ;488
00002c  b10c              CBZ      r4,|L12.50|
00002e  2003              MOVS     r0,#3                 ;491
000030  e7ec              B        |L12.12|
                  |L12.50|
000032  f7fffffe          BL       gcm_init
000036  4604              MOV      r4,r0                 ;494
000038  b10c              CBZ      r4,|L12.62|
00003a  2003              MOVS     r0,#3                 ;497
00003c  e7e6              B        |L12.12|
                  |L12.62|
00003e  f7fffffe          BL       gscm_init
000042  4604              MOV      r4,r0                 ;500
000044  b10c              CBZ      r4,|L12.74|
000046  2003              MOVS     r0,#3                 ;503
000048  e7e0              B        |L12.12|
                  |L12.74|
00004a  f7fffffe          BL       im_init
00004e  4604              MOV      r4,r0                 ;506
000050  b10c              CBZ      r4,|L12.86|
000052  2003              MOVS     r0,#3                 ;509
000054  e7da              B        |L12.12|
                  |L12.86|
000056  f7fffffe          BL       internal_state_reset
00005a  f7fffffe          BL       ble_conn_state_user_flag_acquire
00005e  490d              LDR      r1,|L12.148|
000060  7008              STRB     r0,[r1,#0]            ;514
000062  4608              MOV      r0,r1                 ;515
000064  7800              LDRB     r0,[r0,#0]            ;515  ; m_pairing_flag_id
000066  2818              CMP      r0,#0x18              ;515
000068  d101              BNE      |L12.110|
00006a  2003              MOVS     r0,#3                 ;517
00006c  e7ce              B        |L12.12|
                  |L12.110|
00006e  f7fffffe          BL       ble_conn_state_user_flag_acquire
000072  4909              LDR      r1,|L12.152|
000074  7008              STRB     r0,[r1,#0]            ;520
000076  4608              MOV      r0,r1                 ;521
000078  7800              LDRB     r0,[r0,#0]            ;521  ; m_bonding_flag_id
00007a  2818              CMP      r0,#0x18              ;521
00007c  d101              BNE      |L12.130|
00007e  2003              MOVS     r0,#3                 ;523
000080  e7c4              B        |L12.12|
                  |L12.130|
000082  2000              MOVS     r0,#0                 ;526
000084  4905              LDR      r1,|L12.156|
000086  7008              STRB     r0,[r1,#0]            ;526
000088  2001              MOVS     r0,#1                 ;527
00008a  4905              LDR      r1,|L12.160|
00008c  7008              STRB     r0,[r1,#0]            ;527
00008e  2000              MOVS     r0,#0                 ;529
000090  e7bc              B        |L12.12|
;;;531    
                          ENDP

000092  0000              DCW      0x0000
                  |L12.148|
                          DCD      m_pairing_flag_id
                  |L12.152|
                          DCD      m_bonding_flag_id
                  |L12.156|
                          DCD      m_peer_rank_initialized
                  |L12.160|
                          DCD      m_module_initialized

                          AREA ||i.pm_lesc_public_key_set||, CODE, READONLY, ALIGN=2

                  pm_lesc_public_key_set PROC
;;;681    
;;;682    ret_code_t pm_lesc_public_key_set(ble_gap_lesc_p256_pk_t * p_public_key)
000000  b510              PUSH     {r4,lr}
;;;683    {
000002  4604              MOV      r4,r0
;;;684        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4805              LDR      r0,|L13.28|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  b908              CBNZ     r0,|L13.16|
00000c  2008              MOVS     r0,#8
                  |L13.14|
;;;685        return sm_lesc_public_key_set(p_public_key);
;;;686    }
00000e  bd10              POP      {r4,pc}
                  |L13.16|
000010  bf00              NOP                            ;684
000012  4620              MOV      r0,r4                 ;685
000014  f7fffffe          BL       sm_lesc_public_key_set
000018  e7f9              B        |L13.14|
;;;687    
                          ENDP

00001a  0000              DCW      0x0000
                  |L13.28|
                          DCD      m_module_initialized

                          AREA ||i.pm_local_database_has_changed||, CODE, READONLY, ALIGN=2

                  pm_local_database_has_changed PROC
;;;587    
;;;588    void pm_local_database_has_changed(void)
000000  b510              PUSH     {r4,lr}
;;;589    {
;;;590        VERIFY_MODULE_INITIALIZED_VOID();
000002  bf00              NOP      
000004  4804              LDR      r0,|L14.24|
000006  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000008  b900              CBNZ     r0,|L14.12|
                  |L14.10|
;;;591        gcm_local_database_has_changed();
;;;592    }
00000a  bd10              POP      {r4,pc}
                  |L14.12|
00000c  bf00              NOP                            ;590
00000e  f7fffffe          BL       gcm_local_database_has_changed
000012  bf00              NOP      
000014  e7f9              B        |L14.10|
;;;593    
                          ENDP

000016  0000              DCW      0x0000
                  |L14.24|
                          DCD      m_module_initialized

                          AREA ||i.pm_next_peer_id_get||, CODE, READONLY, ALIGN=2

                  pm_next_peer_id_get PROC
;;;716    
;;;717    pm_peer_id_t pm_next_peer_id_get(pm_peer_id_t prev_peer_id)
000000  b510              PUSH     {r4,lr}
;;;718    {
000002  4604              MOV      r4,r0
;;;719        if (!MODULE_INITIALIZED)
000004  4804              LDR      r0,|L15.24|
000006  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000008  b910              CBNZ     r0,|L15.16|
;;;720        {
;;;721            return PM_PEER_ID_INVALID;
00000a  f64f70ff          MOV      r0,#0xffff
                  |L15.14|
;;;722        }
;;;723        return pdb_next_peer_id_get(prev_peer_id);
;;;724    }
00000e  bd10              POP      {r4,pc}
                  |L15.16|
000010  4620              MOV      r0,r4                 ;723
000012  f7fffffe          BL       pdb_next_peer_id_get
000016  e7fa              B        |L15.14|
;;;725    
                          ENDP

                  |L15.24|
                          DCD      m_module_initialized

                          AREA ||i.pm_on_ble_evt||, CODE, READONLY, ALIGN=2

                  pm_on_ble_evt PROC
;;;444    
;;;445    void pm_on_ble_evt(ble_evt_t * p_ble_evt)
000000  b510              PUSH     {r4,lr}
;;;446    {
000002  4604              MOV      r4,r0
;;;447        VERIFY_MODULE_INITIALIZED_VOID();
000004  bf00              NOP      
000006  4808              LDR      r0,|L16.40|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  b900              CBNZ     r0,|L16.14|
                  |L16.12|
;;;448    
;;;449        im_ble_evt_handler(p_ble_evt);
;;;450        sm_ble_evt_handler(p_ble_evt);
;;;451        gcm_ble_evt_handler(p_ble_evt);
;;;452    }
00000c  bd10              POP      {r4,pc}
                  |L16.14|
00000e  bf00              NOP                            ;447
000010  4620              MOV      r0,r4                 ;449
000012  f7fffffe          BL       im_ble_evt_handler
000016  4620              MOV      r0,r4                 ;450
000018  f7fffffe          BL       sm_ble_evt_handler
00001c  4620              MOV      r0,r4                 ;451
00001e  f7fffffe          BL       gcm_ble_evt_handler
000022  bf00              NOP      
000024  e7f2              B        |L16.12|
;;;453    
                          ENDP

000026  0000              DCW      0x0000
                  |L16.40|
                          DCD      m_module_initialized

                          AREA ||i.pm_pdb_evt_handler||, CODE, READONLY, ALIGN=2

                  pm_pdb_evt_handler PROC
;;;65      */
;;;66     void pm_pdb_evt_handler(pdb_evt_t const * p_pdb_evt)
000000  b530              PUSH     {r4,r5,lr}
;;;67     {
000002  b08b              SUB      sp,sp,#0x2c
000004  4604              MOV      r4,r0
;;;68         bool send_evt = true;
000006  2501              MOVS     r5,#1
;;;69         pm_evt_t pm_evt;
;;;70     
;;;71         memset(&pm_evt, 0, sizeof(pm_evt_t));
000008  2114              MOVS     r1,#0x14
00000a  a806              ADD      r0,sp,#0x18
00000c  f7fffffe          BL       __aeabi_memclr4
;;;72         pm_evt.peer_id = p_pdb_evt->peer_id;
000010  8860              LDRH     r0,[r4,#2]
000012  f8ad001c          STRH     r0,[sp,#0x1c]
;;;73         pm_evt.conn_handle = im_conn_handle_get(pm_evt.peer_id);
000016  f8bd001c          LDRH     r0,[sp,#0x1c]
00001a  f7fffffe          BL       im_conn_handle_get
00001e  f8ad001a          STRH     r0,[sp,#0x1a]
;;;74     
;;;75         switch (p_pdb_evt->evt_id)
000022  7820              LDRB     r0,[r4,#0]
000024  280a              CMP      r0,#0xa
000026  d27d              BCS      |L17.292|
000028  e8dff000          TBB      [pc,r0]
00002c  05123151          DCB      0x05,0x12,0x31,0x51
000030  5d6994b3          DCB      0x5d,0x69,0x94,0xb3
000034  b5b9              DCB      0xb5,0xb9
;;;76         {
;;;77             case PDB_EVT_WRITE_BUF_STORED:
;;;78                 pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
000036  2007              MOVS     r0,#7
000038  f88d0018          STRB     r0,[sp,#0x18]
;;;79                 pm_evt.params.peer_data_update_succeeded.data_id       = p_pdb_evt->data_id;
00003c  7920              LDRB     r0,[r4,#4]
00003e  f88d0020          STRB     r0,[sp,#0x20]
;;;80                 pm_evt.params.peer_data_update_succeeded.action        = PM_PEER_DATA_OP_UPDATE;
000042  2100              MOVS     r1,#0
000044  a806              ADD      r0,sp,#0x18
000046  7241              STRB     r1,[r0,#9]
;;;81                 pm_evt.params.peer_data_update_succeeded.token         = PM_STORE_TOKEN_INVALID;
000048  9109              STR      r1,[sp,#0x24]
;;;82                 pm_evt.params.peer_data_update_succeeded.flash_changed = true;
00004a  2101              MOVS     r1,#1
00004c  7281              STRB     r1,[r0,#0xa]
;;;83                 break;
00004e  e0ac              B        |L17.426|
;;;84     
;;;85             case PDB_EVT_RAW_STORED:
;;;86                 pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
000050  2007              MOVS     r0,#7
000052  f88d0018          STRB     r0,[sp,#0x18]
;;;87                 pm_evt.params.peer_data_update_succeeded.data_id = p_pdb_evt->data_id;
000056  7920              LDRB     r0,[r4,#4]
000058  f88d0020          STRB     r0,[sp,#0x20]
;;;88                 pm_evt.params.peer_data_update_succeeded.action  = PM_PEER_DATA_OP_UPDATE;
00005c  2100              MOVS     r1,#0
00005e  a806              ADD      r0,sp,#0x18
000060  7241              STRB     r1,[r0,#9]
;;;89                 pm_evt.params.peer_data_update_succeeded.token
000062  68a1              LDR      r1,[r4,#8]
000064  9109              STR      r1,[sp,#0x24]
;;;90                                                 = p_pdb_evt->params.raw_stored_evt.store_token;
;;;91                 pm_evt.params.peer_data_update_succeeded.flash_changed = true;
000066  2101              MOVS     r1,#1
000068  7281              STRB     r1,[r0,#0xa]
;;;92     
;;;93                 if (    (m_peer_rank_token != PM_STORE_TOKEN_INVALID)
00006a  4853              LDR      r0,|L17.440|
00006c  6800              LDR      r0,[r0,#0]  ; m_peer_rank_token
00006e  b168              CBZ      r0,|L17.140|
;;;94                     && (m_peer_rank_token == p_pdb_evt->params.raw_stored_evt.store_token))
000070  4951              LDR      r1,|L17.440|
000072  68a0              LDR      r0,[r4,#8]
000074  6809              LDR      r1,[r1,#0]  ; m_peer_rank_token
000076  4288              CMP      r0,r1
000078  d108              BNE      |L17.140|
;;;95                 {
;;;96                     m_peer_rank_token     = PM_STORE_TOKEN_INVALID;
00007a  2000              MOVS     r0,#0
00007c  494e              LDR      r1,|L17.440|
00007e  6008              STR      r0,[r1,#0]  ; m_peer_rank_token
;;;97                     m_highest_ranked_peer = pm_evt.peer_id;
000080  f8bd001c          LDRH     r0,[sp,#0x1c]
000084  494d              LDR      r1,|L17.444|
000086  8008              STRH     r0,[r1,#0]
;;;98     
;;;99                     pm_evt.params.peer_data_update_succeeded.token = PM_STORE_TOKEN_INVALID;
000088  2100              MOVS     r1,#0
00008a  9109              STR      r1,[sp,#0x24]
                  |L17.140|
;;;100                }
;;;101                break;
00008c  e08d              B        |L17.426|
;;;102    
;;;103            case PDB_EVT_RAW_STORE_FAILED:
;;;104                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_FAILED;
00008e  2008              MOVS     r0,#8
000090  f88d0018          STRB     r0,[sp,#0x18]
;;;105                pm_evt.params.peer_data_update_failed.data_id = p_pdb_evt->data_id;
000094  7920              LDRB     r0,[r4,#4]
000096  f88d0020          STRB     r0,[sp,#0x20]
;;;106                pm_evt.params.peer_data_update_failed.action  = PM_PEER_DATA_OP_UPDATE;
00009a  2100              MOVS     r1,#0
00009c  a806              ADD      r0,sp,#0x18
00009e  7241              STRB     r1,[r0,#9]
;;;107                pm_evt.params.peer_data_update_failed.token
0000a0  68a1              LDR      r1,[r4,#8]
0000a2  9109              STR      r1,[sp,#0x24]
;;;108                                                = p_pdb_evt->params.error_raw_store_evt.store_token;
;;;109                pm_evt.params.peer_data_update_failed.error
0000a4  68e1              LDR      r1,[r4,#0xc]
0000a6  910a              STR      r1,[sp,#0x28]
;;;110                                                = p_pdb_evt->params.error_raw_store_evt.err_code;
;;;111    
;;;112                if (    (m_peer_rank_token != PM_STORE_TOKEN_INVALID)
0000a8  4843              LDR      r0,|L17.440|
0000aa  6800              LDR      r0,[r0,#0]  ; m_peer_rank_token
0000ac  b170              CBZ      r0,|L17.204|
;;;113                    && (m_peer_rank_token == p_pdb_evt->params.raw_stored_evt.store_token))
0000ae  4942              LDR      r1,|L17.440|
0000b0  68a0              LDR      r0,[r4,#8]
0000b2  6809              LDR      r1,[r1,#0]  ; m_peer_rank_token
0000b4  4288              CMP      r0,r1
0000b6  d109              BNE      |L17.204|
;;;114                {
;;;115                    m_peer_rank_token            = PM_STORE_TOKEN_INVALID;
0000b8  2000              MOVS     r0,#0
0000ba  493f              LDR      r1,|L17.440|
0000bc  6008              STR      r0,[r1,#0]  ; m_peer_rank_token
;;;116                    m_current_highest_peer_rank -= 1;
0000be  4840              LDR      r0,|L17.448|
0000c0  6800              LDR      r0,[r0,#0]  ; m_current_highest_peer_rank
0000c2  1e40              SUBS     r0,r0,#1
0000c4  493e              LDR      r1,|L17.448|
0000c6  6008              STR      r0,[r1,#0]  ; m_current_highest_peer_rank
;;;117    
;;;118                    pm_evt.params.peer_data_update_succeeded.token = PM_STORE_TOKEN_INVALID;
0000c8  2100              MOVS     r1,#0
0000ca  9109              STR      r1,[sp,#0x24]
                  |L17.204|
;;;119                }
;;;120                break;
0000cc  e06d              B        |L17.426|
;;;121    
;;;122            case PDB_EVT_CLEARED:
;;;123                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
0000ce  2007              MOVS     r0,#7
0000d0  f88d0018          STRB     r0,[sp,#0x18]
;;;124                pm_evt.params.peer_data_update_succeeded.data_id = p_pdb_evt->data_id;
0000d4  7920              LDRB     r0,[r4,#4]
0000d6  f88d0020          STRB     r0,[sp,#0x20]
;;;125                pm_evt.params.peer_data_update_succeeded.action  = PM_PEER_DATA_OP_DELETE;
0000da  2101              MOVS     r1,#1
0000dc  a806              ADD      r0,sp,#0x18
0000de  7241              STRB     r1,[r0,#9]
;;;126                pm_evt.params.peer_data_update_succeeded.token   = PM_STORE_TOKEN_INVALID;
0000e0  2100              MOVS     r1,#0
0000e2  9109              STR      r1,[sp,#0x24]
;;;127                break;
0000e4  e061              B        |L17.426|
;;;128    
;;;129            case PDB_EVT_CLEAR_FAILED:
;;;130                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_FAILED;
0000e6  2008              MOVS     r0,#8
0000e8  f88d0018          STRB     r0,[sp,#0x18]
;;;131                pm_evt.params.peer_data_update_failed.data_id = p_pdb_evt->data_id;
0000ec  7920              LDRB     r0,[r4,#4]
0000ee  f88d0020          STRB     r0,[sp,#0x20]
;;;132                pm_evt.params.peer_data_update_failed.action  = PM_PEER_DATA_OP_DELETE;
0000f2  2101              MOVS     r1,#1
0000f4  a806              ADD      r0,sp,#0x18
0000f6  7241              STRB     r1,[r0,#9]
;;;133                pm_evt.params.peer_data_update_failed.error
0000f8  68a1              LDR      r1,[r4,#8]
0000fa  910a              STR      r1,[sp,#0x28]
;;;134                                                        = p_pdb_evt->params.clear_failed_evt.err_code;
;;;135                break;
0000fc  e055              B        |L17.426|
;;;136    
;;;137            case PDB_EVT_PEER_FREED:
;;;138                pm_evt.evt_id = PM_EVT_PEER_DELETE_SUCCEEDED;
0000fe  2009              MOVS     r0,#9
000100  f88d0018          STRB     r0,[sp,#0x18]
;;;139                // Check that no peers marked for deletion are left.
;;;140                if (m_deleting_all
000104  482f              LDR      r0,|L17.452|
000106  7800              LDRB     r0,[r0,#0]  ; m_deleting_all
000108  b318              CBZ      r0,|L17.338|
;;;141                    && (pdb_next_peer_id_get(PM_PEER_ID_INVALID) == PM_PEER_ID_INVALID)
00010a  f64f70ff          MOV      r0,#0xffff
00010e  f7fffffe          BL       pdb_next_peer_id_get
000112  f64f71ff          MOV      r1,#0xffff
000116  4288              CMP      r0,r1
000118  d11b              BNE      |L17.338|
;;;142                    && (pdb_next_deleted_peer_id_get(PM_PEER_ID_INVALID) == PM_PEER_ID_INVALID))
00011a  f7fffffe          BL       pdb_next_deleted_peer_id_get
00011e  f64f71ff          MOV      r1,#0xffff
000122  e000              B        |L17.294|
                  |L17.292|
000124  e03f              B        |L17.422|
                  |L17.294|
000126  4288              CMP      r0,r1
000128  d113              BNE      |L17.338|
;;;143                {
;;;144                    // pm_peers_delete() has been called and this is the last peer to be deleted.
;;;145                    m_deleting_all = false;
00012a  2000              MOVS     r0,#0
00012c  4925              LDR      r1,|L17.452|
00012e  7008              STRB     r0,[r1,#0]
;;;146    
;;;147                    pm_evt_t pm_delete_all_evt;
;;;148                    memset(&pm_delete_all_evt, 0, sizeof(pm_evt_t));
000130  2114              MOVS     r1,#0x14
000132  a801              ADD      r0,sp,#4
000134  f7fffffe          BL       __aeabi_memclr4
;;;149                    pm_delete_all_evt.evt_id      = PM_EVT_PEERS_DELETE_SUCCEEDED;
000138  200b              MOVS     r0,#0xb
00013a  f88d0004          STRB     r0,[sp,#4]
;;;150                    pm_delete_all_evt.peer_id     = PM_PEER_ID_INVALID;
00013e  f64f70ff          MOV      r0,#0xffff
000142  f8ad0008          STRH     r0,[sp,#8]
;;;151                    pm_delete_all_evt.conn_handle = BLE_CONN_HANDLE_INVALID;
000146  f8ad0006          STRH     r0,[sp,#6]
;;;152    
;;;153                    evt_send(&pm_delete_all_evt);
00014a  a801              ADD      r0,sp,#4
00014c  f7fffffe          BL       evt_send
;;;154                }
000150  bf00              NOP      
                  |L17.338|
;;;155                break;
000152  e02a              B        |L17.426|
;;;156    
;;;157            case PDB_EVT_PEER_FREE_FAILED:
;;;158                pm_evt.evt_id = PM_EVT_PEER_DELETE_FAILED;
000154  200a              MOVS     r0,#0xa
000156  f88d0018          STRB     r0,[sp,#0x18]
;;;159                pm_evt.params.peer_delete_failed.error
00015a  68a0              LDR      r0,[r4,#8]
00015c  9008              STR      r0,[sp,#0x20]
;;;160                                                    = p_pdb_evt->params.peer_free_failed_evt.err_code;
;;;161                if (m_deleting_all)
00015e  4819              LDR      r0,|L17.452|
000160  7800              LDRB     r0,[r0,#0]  ; m_deleting_all
000162  b1a8              CBZ      r0,|L17.400|
;;;162                {
;;;163                    // pm_peers_delete() has been called and has thus failed.
;;;164    
;;;165                    m_deleting_all = false;
000164  2000              MOVS     r0,#0
000166  4917              LDR      r1,|L17.452|
000168  7008              STRB     r0,[r1,#0]
;;;166    
;;;167                    pm_evt_t pm_delete_all_evt;
;;;168                    memset(&pm_delete_all_evt, 0, sizeof(pm_evt_t));
00016a  2114              MOVS     r1,#0x14
00016c  a801              ADD      r0,sp,#4
00016e  f7fffffe          BL       __aeabi_memclr4
;;;169                    pm_delete_all_evt.evt_id      = PM_EVT_PEERS_DELETE_FAILED;
000172  200c              MOVS     r0,#0xc
000174  f88d0004          STRB     r0,[sp,#4]
;;;170                    pm_delete_all_evt.peer_id     = PM_PEER_ID_INVALID;
000178  f64f70ff          MOV      r0,#0xffff
00017c  f8ad0008          STRH     r0,[sp,#8]
;;;171                    pm_delete_all_evt.conn_handle = BLE_CONN_HANDLE_INVALID;
000180  f8ad0006          STRH     r0,[sp,#6]
;;;172                    pm_delete_all_evt.params.peers_delete_failed_evt.error
000184  68a0              LDR      r0,[r4,#8]
000186  9003              STR      r0,[sp,#0xc]
;;;173                                                  = p_pdb_evt->params.peer_free_failed_evt.err_code;
;;;174    
;;;175                    evt_send(&pm_delete_all_evt);
000188  a801              ADD      r0,sp,#4
00018a  f7fffffe          BL       evt_send
;;;176                }
00018e  bf00              NOP      
                  |L17.400|
;;;177                break;
000190  e00b              B        |L17.426|
;;;178    
;;;179            case PDB_EVT_COMPRESSED:
;;;180                send_evt = false;
000192  2500              MOVS     r5,#0
;;;181                // Do nothing
;;;182                break;
000194  e009              B        |L17.426|
;;;183    
;;;184            case PDB_EVT_ERROR_NO_MEM:
;;;185                pm_evt.evt_id = PM_EVT_STORAGE_FULL;
000196  2005              MOVS     r0,#5
000198  f88d0018          STRB     r0,[sp,#0x18]
;;;186                break;
00019c  e005              B        |L17.426|
;;;187    
;;;188            case PDB_EVT_ERROR_UNEXPECTED:
;;;189                pm_evt.evt_id = PM_EVT_ERROR_UNEXPECTED;
00019e  2006              MOVS     r0,#6
0001a0  f88d0018          STRB     r0,[sp,#0x18]
;;;190                break;
0001a4  e001              B        |L17.426|
                  |L17.422|
;;;191    
;;;192            default:
;;;193                send_evt = false;
0001a6  2500              MOVS     r5,#0
;;;194                break;
0001a8  bf00              NOP      
                  |L17.426|
0001aa  bf00              NOP                            ;83
;;;195        }
;;;196    
;;;197        if (send_evt)
0001ac  b115              CBZ      r5,|L17.436|
;;;198        {
;;;199            evt_send(&pm_evt);
0001ae  a806              ADD      r0,sp,#0x18
0001b0  f7fffffe          BL       evt_send
                  |L17.436|
;;;200        }
;;;201    }
0001b4  b00b              ADD      sp,sp,#0x2c
0001b6  bd30              POP      {r4,r5,pc}
;;;202    
                          ENDP

                  |L17.440|
                          DCD      m_peer_rank_token
                  |L17.444|
                          DCD      m_highest_ranked_peer
                  |L17.448|
                          DCD      m_current_highest_peer_rank
                  |L17.452|
                          DCD      m_deleting_all

                          AREA ||i.pm_peer_count||, CODE, READONLY, ALIGN=2

                  pm_peer_count PROC
;;;706    
;;;707    uint32_t pm_peer_count(void)
000000  b510              PUSH     {r4,lr}
;;;708    {
;;;709        if (!MODULE_INITIALIZED)
000002  4804              LDR      r0,|L18.20|
000004  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000006  b908              CBNZ     r0,|L18.12|
;;;710        {
;;;711            return 0;
000008  2000              MOVS     r0,#0
                  |L18.10|
;;;712        }
;;;713        return pdb_n_peers();
;;;714    }
00000a  bd10              POP      {r4,pc}
                  |L18.12|
00000c  f7fffffe          BL       pdb_n_peers
000010  e7fb              B        |L18.10|
;;;715    
                          ENDP

000012  0000              DCW      0x0000
                  |L18.20|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_data_app_data_load||, CODE, READONLY, ALIGN=1

                  pm_peer_data_app_data_load PROC
;;;775    
;;;776    ret_code_t pm_peer_data_app_data_load(pm_peer_id_t       peer_id,
000000  b570              PUSH     {r4-r6,lr}
;;;777                                          uint8_t          * p_data,
;;;778                                          uint16_t         * p_length)
;;;779    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;780        return pm_peer_data_load(peer_id,
000008  462b              MOV      r3,r5
00000a  4622              MOV      r2,r4
00000c  2104              MOVS     r1,#4
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       pm_peer_data_load
;;;781                                 PM_PEER_DATA_ID_APPLICATION,
;;;782                                 p_data,
;;;783                                 p_length);
;;;784    }
000014  bd70              POP      {r4-r6,pc}
;;;785    
                          ENDP


                          AREA ||i.pm_peer_data_app_data_store||, CODE, READONLY, ALIGN=1

                  pm_peer_data_app_data_store PROC
;;;834    
;;;835    ret_code_t pm_peer_data_app_data_store(pm_peer_id_t       peer_id,
000000  b5f8              PUSH     {r3-r7,lr}
;;;836                                           uint8_t    const * p_data,
;;;837                                           uint16_t           length,
;;;838                                           pm_store_token_t * p_token)
;;;839    {
000002  4607              MOV      r7,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
000008  461e              MOV      r6,r3
;;;840        return pm_peer_data_store(peer_id,
00000a  462b              MOV      r3,r5
00000c  4622              MOV      r2,r4
00000e  2104              MOVS     r1,#4
000010  4638              MOV      r0,r7
000012  9600              STR      r6,[sp,#0]
000014  f7fffffe          BL       pm_peer_data_store
;;;841                                  PM_PEER_DATA_ID_APPLICATION,
;;;842                                  p_data,
;;;843                                  length,
;;;844                                  p_token);
;;;845    }
000018  bdf8              POP      {r3-r7,pc}
;;;846    
                          ENDP


                          AREA ||i.pm_peer_data_bonding_load||, CODE, READONLY, ALIGN=1

                  pm_peer_data_bonding_load PROC
;;;753    
;;;754    ret_code_t pm_peer_data_bonding_load(pm_peer_id_t             peer_id,
000000  b538              PUSH     {r3-r5,lr}
;;;755                                         pm_peer_data_bonding_t * p_data)
;;;756    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;757        uint16_t length = sizeof(pm_peer_data_bonding_t);
000006  2050              MOVS     r0,#0x50
000008  9000              STR      r0,[sp,#0]
;;;758        return pm_peer_data_load(peer_id,
00000a  466b              MOV      r3,sp
00000c  4622              MOV      r2,r4
00000e  2107              MOVS     r1,#7
000010  4628              MOV      r0,r5
000012  f7fffffe          BL       pm_peer_data_load
;;;759                                 PM_PEER_DATA_ID_BONDING,
;;;760                                 p_data,
;;;761                                 &length);
;;;762    }
000016  bd38              POP      {r3-r5,pc}
;;;763    
                          ENDP


                          AREA ||i.pm_peer_data_bonding_store||, CODE, READONLY, ALIGN=1

                  pm_peer_data_bonding_store PROC
;;;809    
;;;810    ret_code_t pm_peer_data_bonding_store(pm_peer_id_t                   peer_id,
000000  b5f8              PUSH     {r3-r7,lr}
;;;811                                          pm_peer_data_bonding_t const * p_data,
;;;812                                          pm_store_token_t             * p_token)
;;;813    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;814        return pm_peer_data_store(peer_id,
000008  2350              MOVS     r3,#0x50
00000a  4622              MOV      r2,r4
00000c  2107              MOVS     r1,#7
00000e  4630              MOV      r0,r6
000010  9500              STR      r5,[sp,#0]
000012  f7fffffe          BL       pm_peer_data_store
;;;815                                  PM_PEER_DATA_ID_BONDING,
;;;816                                  p_data,
;;;817                                  ALIGN_NUM(4, sizeof(pm_peer_data_bonding_t)),
;;;818                                  p_token);
;;;819    }
000016  bdf8              POP      {r3-r7,pc}
;;;820    
                          ENDP


                          AREA ||i.pm_peer_data_delete||, CODE, READONLY, ALIGN=2

                  pm_peer_data_delete PROC
;;;847    
;;;848    ret_code_t pm_peer_data_delete(pm_peer_id_t peer_id, pm_peer_data_id_t data_id)
000000  b570              PUSH     {r4-r6,lr}
;;;849    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;850        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4807              LDR      r0,|L23.40|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b908              CBNZ     r0,|L23.18|
00000e  2008              MOVS     r0,#8
                  |L23.16|
;;;851    
;;;852        if (data_id == PM_PEER_DATA_ID_BONDING)
;;;853        {
;;;854            return NRF_ERROR_INVALID_PARAM;
;;;855        }
;;;856    
;;;857        return pdb_clear(peer_id, data_id);
;;;858    }
000010  bd70              POP      {r4-r6,pc}
                  |L23.18|
000012  bf00              NOP                            ;850
000014  2c07              CMP      r4,#7                 ;852
000016  d101              BNE      |L23.28|
000018  2007              MOVS     r0,#7                 ;854
00001a  e7f9              B        |L23.16|
                  |L23.28|
00001c  4621              MOV      r1,r4                 ;857
00001e  4628              MOV      r0,r5                 ;857
000020  f7fffffe          BL       pdb_clear
000024  e7f4              B        |L23.16|
;;;859    
                          ENDP

000026  0000              DCW      0x0000
                  |L23.40|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_data_load||, CODE, READONLY, ALIGN=2

                  pm_peer_data_load PROC
;;;726    
;;;727    ret_code_t pm_peer_data_load(pm_peer_id_t       peer_id,
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;728                                 pm_peer_data_id_t  data_id,
;;;729                                 void             * p_data,
;;;730                                 uint16_t         * p_length)
;;;731    {
000004  4607              MOV      r7,r0
000006  460e              MOV      r6,r1
000008  4615              MOV      r5,r2
00000a  461c              MOV      r4,r3
;;;732        VERIFY_MODULE_INITIALIZED();
00000c  bf00              NOP      
00000e  481d              LDR      r0,|L24.132|
000010  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000012  b910              CBNZ     r0,|L24.26|
000014  2008              MOVS     r0,#8
                  |L24.22|
;;;733        VERIFY_PARAM_NOT_NULL(p_data);
;;;734        VERIFY_PARAM_NOT_NULL(p_length);
;;;735        if (ALIGN_NUM(4, *p_length) != *p_length)
;;;736        {
;;;737            return NRF_ERROR_INVALID_PARAM;
;;;738        }
;;;739    
;;;740        pm_peer_data_t peer_data;
;;;741        memset(&peer_data, 0, sizeof(peer_data));
;;;742        peer_data.length_words = BYTES_TO_WORDS(*p_length);
;;;743        peer_data.data_id      = data_id;
;;;744        peer_data.p_all_data   = p_data;
;;;745    
;;;746        ret_code_t err_code = pdb_peer_data_load(peer_id, data_id, &peer_data);
;;;747    
;;;748        *p_length = peer_data.length_words * BYTES_PER_WORD;
;;;749    
;;;750        return err_code;
;;;751    }
000016  e8bd81fc          POP      {r2-r8,pc}
                  |L24.26|
00001a  bf00              NOP                            ;732
00001c  bf00              NOP                            ;733
00001e  b90d              CBNZ     r5,|L24.36|
000020  200e              MOVS     r0,#0xe               ;733
000022  e7f8              B        |L24.22|
                  |L24.36|
000024  bf00              NOP                            ;733
000026  bf00              NOP                            ;734
000028  b90c              CBNZ     r4,|L24.46|
00002a  200e              MOVS     r0,#0xe               ;734
00002c  e7f3              B        |L24.22|
                  |L24.46|
00002e  bf00              NOP                            ;734
000030  8821              LDRH     r1,[r4,#0]            ;735
000032  1e48              SUBS     r0,r1,#1              ;735
000034  17c1              ASRS     r1,r0,#31             ;735
000036  eb007191          ADD      r1,r0,r1,LSR #30      ;735
00003a  1089              ASRS     r1,r1,#2              ;735
00003c  eba00281          SUB      r2,r0,r1,LSL #2       ;735
000040  8821              LDRH     r1,[r4,#0]            ;735
000042  1cc9              ADDS     r1,r1,#3              ;735
000044  1a89              SUBS     r1,r1,r2              ;735
000046  8822              LDRH     r2,[r4,#0]            ;735
000048  4291              CMP      r1,r2                 ;735
00004a  d001              BEQ      |L24.80|
00004c  2007              MOVS     r0,#7                 ;737
00004e  e7e2              B        |L24.22|
                  |L24.80|
000050  2000              MOVS     r0,#0                 ;741
000052  9000              STR      r0,[sp,#0]            ;741
000054  9001              STR      r0,[sp,#4]            ;741
000056  8820              LDRH     r0,[r4,#0]            ;742
000058  1cc0              ADDS     r0,r0,#3              ;742
00005a  1080              ASRS     r0,r0,#2              ;742
00005c  f8ad0000          STRH     r0,[sp,#0]            ;742
000060  f88d6002          STRB     r6,[sp,#2]            ;743
000064  9501              STR      r5,[sp,#4]            ;744
000066  466a              MOV      r2,sp                 ;746
000068  4631              MOV      r1,r6                 ;746
00006a  4638              MOV      r0,r7                 ;746
00006c  f7fffffe          BL       pdb_peer_data_load
000070  4680              MOV      r8,r0                 ;746
000072  f8bd0000          LDRH     r0,[sp,#0]            ;748
000076  f64f71ff          MOV      r1,#0xffff            ;748
00007a  ea010080          AND      r0,r1,r0,LSL #2       ;748
00007e  8020              STRH     r0,[r4,#0]            ;748
000080  4640              MOV      r0,r8                 ;750
000082  e7c8              B        |L24.22|
;;;752    
                          ENDP

                  |L24.132|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_data_remote_db_load||, CODE, READONLY, ALIGN=1

                  pm_peer_data_remote_db_load PROC
;;;764    
;;;765    ret_code_t pm_peer_data_remote_db_load(pm_peer_id_t        peer_id,
000000  b570              PUSH     {r4-r6,lr}
;;;766                                           ble_gatt_db_srv_t * p_data,
;;;767                                           uint16_t          * p_length)
;;;768    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;769        return pm_peer_data_load(peer_id,
000008  462b              MOV      r3,r5
00000a  4622              MOV      r2,r4
00000c  2105              MOVS     r1,#5
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       pm_peer_data_load
;;;770                                 PM_PEER_DATA_ID_GATT_REMOTE,
;;;771                                 p_data,
;;;772                                 p_length);
;;;773    }
000014  bd70              POP      {r4-r6,pc}
;;;774    
                          ENDP


                          AREA ||i.pm_peer_data_remote_db_store||, CODE, READONLY, ALIGN=1

                  pm_peer_data_remote_db_store PROC
;;;821    
;;;822    ret_code_t pm_peer_data_remote_db_store(pm_peer_id_t              peer_id,
000000  b5f8              PUSH     {r3-r7,lr}
;;;823                                            ble_gatt_db_srv_t const * p_data,
;;;824                                            uint16_t                  length,
;;;825                                            pm_store_token_t        * p_token)
;;;826    {
000002  4607              MOV      r7,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
000008  461e              MOV      r6,r3
;;;827        return pm_peer_data_store(peer_id,
00000a  462b              MOV      r3,r5
00000c  4622              MOV      r2,r4
00000e  2105              MOVS     r1,#5
000010  4638              MOV      r0,r7
000012  9600              STR      r6,[sp,#0]
000014  f7fffffe          BL       pm_peer_data_store
;;;828                                  PM_PEER_DATA_ID_GATT_REMOTE,
;;;829                                  p_data,
;;;830                                  length,
;;;831                                  p_token);
;;;832    }
000018  bdf8              POP      {r3-r7,pc}
;;;833    
                          ENDP


                          AREA ||i.pm_peer_data_store||, CODE, READONLY, ALIGN=2

                  pm_peer_data_store PROC
;;;786    
;;;787    ret_code_t pm_peer_data_store(pm_peer_id_t       peer_id,
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;788                                  pm_peer_data_id_t  data_id,
;;;789                                  void       const * p_data,
;;;790                                  uint16_t           length,
;;;791                                  pm_store_token_t * p_token)
;;;792    {
000004  4607              MOV      r7,r0
000006  460e              MOV      r6,r1
000008  4615              MOV      r5,r2
00000a  461c              MOV      r4,r3
00000c  f8dd8020          LDR      r8,[sp,#0x20]
;;;793        VERIFY_MODULE_INITIALIZED();
000010  bf00              NOP      
000012  4814              LDR      r0,|L27.100|
000014  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000016  b910              CBNZ     r0,|L27.30|
000018  2008              MOVS     r0,#8
                  |L27.26|
;;;794        VERIFY_PARAM_NOT_NULL(p_data);
;;;795        if (ALIGN_NUM(4, length) != length)
;;;796        {
;;;797            return NRF_ERROR_INVALID_PARAM;
;;;798        }
;;;799    
;;;800        pm_peer_data_flash_t peer_data;
;;;801        memset(&peer_data, 0, sizeof(peer_data));
;;;802        peer_data.length_words = BYTES_TO_WORDS(length);
;;;803        peer_data.data_id      = data_id;
;;;804        peer_data.p_all_data   = p_data;
;;;805    
;;;806        return pdb_raw_store(peer_id, &peer_data, p_token);
;;;807    }
00001a  e8bd81fc          POP      {r2-r8,pc}
                  |L27.30|
00001e  bf00              NOP                            ;793
000020  bf00              NOP                            ;794
000022  b90d              CBNZ     r5,|L27.40|
000024  200e              MOVS     r0,#0xe               ;794
000026  e7f8              B        |L27.26|
                  |L27.40|
000028  bf00              NOP                            ;794
00002a  1e60              SUBS     r0,r4,#1              ;795
00002c  17c1              ASRS     r1,r0,#31             ;795
00002e  eb007191          ADD      r1,r0,r1,LSR #30      ;795
000032  1089              ASRS     r1,r1,#2              ;795
000034  eba00281          SUB      r2,r0,r1,LSL #2       ;795
000038  1ce1              ADDS     r1,r4,#3              ;795
00003a  1a89              SUBS     r1,r1,r2              ;795
00003c  42a1              CMP      r1,r4                 ;795
00003e  d001              BEQ      |L27.68|
000040  2007              MOVS     r0,#7                 ;797
000042  e7ea              B        |L27.26|
                  |L27.68|
000044  2000              MOVS     r0,#0                 ;801
000046  9000              STR      r0,[sp,#0]            ;801
000048  9001              STR      r0,[sp,#4]            ;801
00004a  1ce0              ADDS     r0,r4,#3              ;802
00004c  1080              ASRS     r0,r0,#2              ;802
00004e  f8ad0000          STRH     r0,[sp,#0]            ;802
000052  f88d6002          STRB     r6,[sp,#2]            ;803
000056  9501              STR      r5,[sp,#4]            ;804
000058  4642              MOV      r2,r8                 ;806
00005a  4669              MOV      r1,sp                 ;806
00005c  4638              MOV      r0,r7                 ;806
00005e  f7fffffe          BL       pdb_raw_store
000062  e7da              B        |L27.26|
;;;808    
                          ENDP

                  |L27.100|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_delete||, CODE, READONLY, ALIGN=2

                  pm_peer_delete PROC
;;;921    
;;;922    ret_code_t pm_peer_delete(pm_peer_id_t peer_id)
000000  b510              PUSH     {r4,lr}
;;;923    {
000002  4604              MOV      r4,r0
;;;924        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4805              LDR      r0,|L28.28|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  b908              CBNZ     r0,|L28.16|
00000c  2008              MOVS     r0,#8
                  |L28.14|
;;;925    
;;;926        return im_peer_free(peer_id);
;;;927    }
00000e  bd10              POP      {r4,pc}
                  |L28.16|
000010  bf00              NOP                            ;924
000012  4620              MOV      r0,r4                 ;926
000014  f7fffffe          BL       im_peer_free
000018  e7f9              B        |L28.14|
;;;928    
                          ENDP

00001a  0000              DCW      0x0000
                  |L28.28|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_id_get||, CODE, READONLY, ALIGN=2

                  pm_peer_id_get PROC
;;;697    
;;;698    ret_code_t pm_peer_id_get(uint16_t conn_handle, pm_peer_id_t * p_peer_id)
000000  b570              PUSH     {r4-r6,lr}
;;;699    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;700        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4808              LDR      r0,|L29.44|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b908              CBNZ     r0,|L29.18|
00000e  2008              MOVS     r0,#8
                  |L29.16|
;;;701        VERIFY_PARAM_NOT_NULL(p_peer_id);
;;;702        *p_peer_id = im_peer_id_get_by_conn_handle(conn_handle);
;;;703        return NRF_SUCCESS;
;;;704    }
000010  bd70              POP      {r4-r6,pc}
                  |L29.18|
000012  bf00              NOP                            ;700
000014  bf00              NOP                            ;701
000016  b90c              CBNZ     r4,|L29.28|
000018  200e              MOVS     r0,#0xe               ;701
00001a  e7f9              B        |L29.16|
                  |L29.28|
00001c  bf00              NOP                            ;701
00001e  4628              MOV      r0,r5                 ;702
000020  f7fffffe          BL       im_peer_id_get_by_conn_handle
000024  8020              STRH     r0,[r4,#0]            ;702
000026  2000              MOVS     r0,#0                 ;703
000028  e7f2              B        |L29.16|
;;;705    
                          ENDP

00002a  0000              DCW      0x0000
                  |L29.44|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_new||, CODE, READONLY, ALIGN=2

                  pm_peer_new PROC
;;;860    
;;;861    ret_code_t pm_peer_new(pm_peer_id_t           * p_new_peer_id,
000000  b5fe              PUSH     {r1-r7,lr}
;;;862                           pm_peer_data_bonding_t * p_bonding_data,
;;;863                           pm_store_token_t       * p_token)
;;;864    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4617              MOV      r7,r2
;;;865        ret_code_t           err_code;
;;;866        pm_peer_id_t         peer_id;
;;;867        pm_peer_data_flash_t peer_data;
;;;868    
;;;869        VERIFY_MODULE_INITIALIZED();
000008  bf00              NOP      
00000a  4826              LDR      r0,|L30.164|
00000c  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000e  b908              CBNZ     r0,|L30.20|
000010  2008              MOVS     r0,#8
                  |L30.18|
;;;870        VERIFY_PARAM_NOT_NULL(p_bonding_data);
;;;871        VERIFY_PARAM_NOT_NULL(p_new_peer_id);
;;;872    
;;;873        memset(&peer_data, 0, sizeof(pm_peer_data_flash_t));
;;;874    
;;;875        // Search through existing bonds to look for a duplicate.
;;;876        pds_peer_data_iterate_prepare();
;;;877    
;;;878        // @note emdi: should maybe use a critical section, since data is not copied while iterating.
;;;879        while (pds_peer_data_iterate(PM_PEER_DATA_ID_BONDING, &peer_id, &peer_data))
;;;880        {
;;;881            if (im_is_duplicate_bonding_data(p_bonding_data, peer_data.p_bonding_data))
;;;882            {
;;;883                *p_new_peer_id = peer_id;
;;;884                return NRF_SUCCESS;
;;;885            }
;;;886        }
;;;887    
;;;888        // If no duplicate data is found, prepare to write a new bond to flash.
;;;889    
;;;890        *p_new_peer_id = pdb_peer_allocate();
;;;891    
;;;892        if (*p_new_peer_id == PM_PEER_ID_INVALID)
;;;893        {
;;;894            return NRF_ERROR_NO_MEM;
;;;895        }
;;;896    
;;;897        memset(&peer_data, 0, sizeof(pm_peer_data_flash_t));
;;;898    
;;;899        peer_data.data_id        = PM_PEER_DATA_ID_BONDING;
;;;900        peer_data.p_bonding_data = p_bonding_data;
;;;901        peer_data.length_words   = BYTES_TO_WORDS(sizeof(pm_peer_data_bonding_t));
;;;902    
;;;903        err_code = pdb_raw_store(*p_new_peer_id, &peer_data, p_token);
;;;904    
;;;905        if (err_code != NRF_SUCCESS)
;;;906        {
;;;907            if (im_peer_free(*p_new_peer_id) != NRF_SUCCESS)
;;;908            {
;;;909                return NRF_ERROR_INTERNAL;
;;;910            }
;;;911    
;;;912            // NRF_ERROR_NO_MEM,   if no space in flash.
;;;913            // NRF_ERROR_BUSY,     if flash filesystem was busy.
;;;914            // NRF_ERROR_INTENRAL, on internal error.
;;;915            return err_code;
;;;916        }
;;;917    
;;;918        return NRF_SUCCESS;
;;;919    }
000012  bdfe              POP      {r1-r7,pc}
                  |L30.20|
000014  bf00              NOP                            ;869
000016  bf00              NOP                            ;870
000018  b90d              CBNZ     r5,|L30.30|
00001a  200e              MOVS     r0,#0xe               ;870
00001c  e7f9              B        |L30.18|
                  |L30.30|
00001e  bf00              NOP                            ;870
000020  bf00              NOP                            ;871
000022  b90c              CBNZ     r4,|L30.40|
000024  200e              MOVS     r0,#0xe               ;871
000026  e7f4              B        |L30.18|
                  |L30.40|
000028  bf00              NOP                            ;871
00002a  2000              MOVS     r0,#0                 ;873
00002c  9000              STR      r0,[sp,#0]            ;873
00002e  9001              STR      r0,[sp,#4]            ;873
000030  f7fffffe          BL       pds_peer_data_iterate_prepare
000034  e009              B        |L30.74|
                  |L30.54|
000036  4628              MOV      r0,r5                 ;881
000038  9901              LDR      r1,[sp,#4]            ;881
00003a  f7fffffe          BL       im_is_duplicate_bonding_data
00003e  b120              CBZ      r0,|L30.74|
000040  f8bd0008          LDRH     r0,[sp,#8]            ;883
000044  8020              STRH     r0,[r4,#0]            ;883
000046  2000              MOVS     r0,#0                 ;884
000048  e7e3              B        |L30.18|
                  |L30.74|
00004a  466a              MOV      r2,sp                 ;879
00004c  a902              ADD      r1,sp,#8              ;879
00004e  2007              MOVS     r0,#7                 ;879
000050  f7fffffe          BL       pds_peer_data_iterate
000054  2800              CMP      r0,#0                 ;879
000056  d1ee              BNE      |L30.54|
000058  f7fffffe          BL       pdb_peer_allocate
00005c  8020              STRH     r0,[r4,#0]            ;890
00005e  8820              LDRH     r0,[r4,#0]            ;892
000060  f64f71ff          MOV      r1,#0xffff            ;892
000064  4288              CMP      r0,r1                 ;892
000066  d101              BNE      |L30.108|
000068  2004              MOVS     r0,#4                 ;894
00006a  e7d2              B        |L30.18|
                  |L30.108|
00006c  2000              MOVS     r0,#0                 ;897
00006e  9000              STR      r0,[sp,#0]            ;897
000070  9001              STR      r0,[sp,#4]            ;897
000072  2007              MOVS     r0,#7                 ;899
000074  f88d0002          STRB     r0,[sp,#2]            ;899
000078  9501              STR      r5,[sp,#4]            ;900
00007a  2014              MOVS     r0,#0x14              ;901
00007c  f8ad0000          STRH     r0,[sp,#0]            ;901
000080  8820              LDRH     r0,[r4,#0]            ;903
000082  463a              MOV      r2,r7                 ;903
000084  4669              MOV      r1,sp                 ;903
000086  f7fffffe          BL       pdb_raw_store
00008a  4606              MOV      r6,r0                 ;903
00008c  b13e              CBZ      r6,|L30.158|
00008e  8820              LDRH     r0,[r4,#0]            ;907
000090  f7fffffe          BL       im_peer_free
000094  b108              CBZ      r0,|L30.154|
000096  2003              MOVS     r0,#3                 ;909
000098  e7bb              B        |L30.18|
                  |L30.154|
00009a  4630              MOV      r0,r6                 ;915
00009c  e7b9              B        |L30.18|
                  |L30.158|
00009e  2000              MOVS     r0,#0                 ;918
0000a0  e7b7              B        |L30.18|
;;;920    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L30.164|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_rank_highest||, CODE, READONLY, ALIGN=2

                  pm_peer_rank_highest PROC
;;;1038   
;;;1039   ret_code_t pm_peer_rank_highest(pm_peer_id_t peer_id)
000000  b530              PUSH     {r4,r5,lr}
;;;1040   {
000002  b087              SUB      sp,sp,#0x1c
000004  4605              MOV      r5,r0
;;;1041       VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  482a              LDR      r0,|L31.180|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b910              CBNZ     r0,|L31.20|
00000e  2008              MOVS     r0,#8
                  |L31.16|
;;;1042   
;;;1043       ret_code_t err_code;
;;;1044       //lint -save -e65 -e64
;;;1045       pm_peer_data_flash_t peer_data   = {.length_words = BYTES_TO_WORDS(sizeof(m_current_highest_peer_rank)),
;;;1046                                           .data_id      = PM_PEER_DATA_ID_PEER_RANK,
;;;1047                                           .p_peer_rank  = &m_current_highest_peer_rank};
;;;1048       //lint -restore
;;;1049   
;;;1050   
;;;1051       if (!m_peer_rank_initialized)
;;;1052       {
;;;1053           rank_init();
;;;1054       }
;;;1055   
;;;1056       if (!m_peer_rank_initialized || (m_peer_rank_token != PM_STORE_TOKEN_INVALID))
;;;1057       {
;;;1058           err_code = NRF_ERROR_BUSY;
;;;1059       }
;;;1060       else
;;;1061       {
;;;1062           if ((peer_id == m_highest_ranked_peer) && (m_current_highest_peer_rank > 0))
;;;1063           {
;;;1064               pm_evt_t pm_evt;
;;;1065   
;;;1066               // The reported peer is already regarded as highest (provided it has an index at all)
;;;1067               err_code = NRF_SUCCESS;
;;;1068   
;;;1069               memset(&pm_evt, 0, sizeof(pm_evt));
;;;1070               pm_evt.evt_id      = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
;;;1071               pm_evt.conn_handle = im_conn_handle_get(peer_id);
;;;1072               pm_evt.peer_id     = peer_id;
;;;1073               pm_evt.params.peer_data_update_succeeded.data_id       = PM_PEER_DATA_ID_PEER_RANK;
;;;1074               pm_evt.params.peer_data_update_succeeded.action        = PM_PEER_DATA_OP_UPDATE;
;;;1075               pm_evt.params.peer_data_update_succeeded.token         = PM_STORE_TOKEN_INVALID;
;;;1076               pm_evt.params.peer_data_update_succeeded.flash_changed = false;
;;;1077   
;;;1078               evt_send(&pm_evt);
;;;1079           }
;;;1080           else
;;;1081           {
;;;1082               m_current_highest_peer_rank += 1;
;;;1083               err_code = pdb_raw_store(peer_id, &peer_data, &m_peer_rank_token);
;;;1084               if (err_code != NRF_SUCCESS)
;;;1085               {
;;;1086                   m_peer_rank_token    = PM_STORE_TOKEN_INVALID;
;;;1087                   m_current_highest_peer_rank -= 1;
;;;1088                   if ((err_code != NRF_ERROR_BUSY) && (err_code != NRF_ERROR_NO_MEM))
;;;1089                   {
;;;1090                       err_code = NRF_ERROR_INTERNAL;
;;;1091                   }
;;;1092               }
;;;1093           }
;;;1094       }
;;;1095       return err_code;
;;;1096   }
000010  b007              ADD      sp,sp,#0x1c
000012  bd30              POP      {r4,r5,pc}
                  |L31.20|
000014  bf00              NOP                            ;1041
000016  4928              LDR      r1,|L31.184|
000018  c903              LDM      r1,{r0,r1}            ;1045
00001a  e9cd0105          STRD     r0,r1,[sp,#0x14]      ;1045
00001e  4827              LDR      r0,|L31.188|
000020  7800              LDRB     r0,[r0,#0]            ;1051  ; m_peer_rank_initialized
000022  b908              CBNZ     r0,|L31.40|
000024  f7fffffe          BL       rank_init
                  |L31.40|
000028  4824              LDR      r0,|L31.188|
00002a  7800              LDRB     r0,[r0,#0]            ;1056  ; m_peer_rank_initialized
00002c  b110              CBZ      r0,|L31.52|
00002e  4824              LDR      r0,|L31.192|
000030  6800              LDR      r0,[r0,#0]            ;1056  ; m_peer_rank_token
000032  b108              CBZ      r0,|L31.56|
                  |L31.52|
000034  2411              MOVS     r4,#0x11              ;1058
000036  e03b              B        |L31.176|
                  |L31.56|
000038  4822              LDR      r0,|L31.196|
00003a  8800              LDRH     r0,[r0,#0]            ;1062  ; m_highest_ranked_peer
00003c  4285              CMP      r5,r0                 ;1062
00003e  d11e              BNE      |L31.126|
000040  4821              LDR      r0,|L31.200|
000042  6800              LDR      r0,[r0,#0]            ;1062  ; m_current_highest_peer_rank
000044  b1d8              CBZ      r0,|L31.126|
000046  2400              MOVS     r4,#0                 ;1067
000048  2114              MOVS     r1,#0x14              ;1069
00004a  4668              MOV      r0,sp                 ;1069
00004c  f7fffffe          BL       __aeabi_memclr4
000050  2007              MOVS     r0,#7                 ;1070
000052  f88d0000          STRB     r0,[sp,#0]            ;1070
000056  4628              MOV      r0,r5                 ;1071
000058  f7fffffe          BL       im_conn_handle_get
00005c  f8ad0002          STRH     r0,[sp,#2]            ;1071
000060  f8ad5004          STRH     r5,[sp,#4]            ;1072
000064  2006              MOVS     r0,#6                 ;1073
000066  f88d0008          STRB     r0,[sp,#8]            ;1073
00006a  2100              MOVS     r1,#0                 ;1074
00006c  f88d1009          STRB     r1,[sp,#9]            ;1074
000070  9103              STR      r1,[sp,#0xc]          ;1075
000072  f88d100a          STRB     r1,[sp,#0xa]          ;1076
000076  4668              MOV      r0,sp                 ;1078
000078  f7fffffe          BL       evt_send
00007c  e018              B        |L31.176|
                  |L31.126|
00007e  4812              LDR      r0,|L31.200|
000080  6800              LDR      r0,[r0,#0]            ;1082  ; m_current_highest_peer_rank
000082  1c40              ADDS     r0,r0,#1              ;1082
000084  4910              LDR      r1,|L31.200|
000086  6008              STR      r0,[r1,#0]            ;1082  ; m_current_highest_peer_rank
000088  4a0d              LDR      r2,|L31.192|
00008a  a905              ADD      r1,sp,#0x14           ;1083
00008c  4628              MOV      r0,r5                 ;1083
00008e  f7fffffe          BL       pdb_raw_store
000092  4604              MOV      r4,r0                 ;1083
000094  b164              CBZ      r4,|L31.176|
000096  2000              MOVS     r0,#0                 ;1086
000098  4909              LDR      r1,|L31.192|
00009a  6008              STR      r0,[r1,#0]            ;1086  ; m_peer_rank_token
00009c  480a              LDR      r0,|L31.200|
00009e  6800              LDR      r0,[r0,#0]            ;1087  ; m_current_highest_peer_rank
0000a0  1e40              SUBS     r0,r0,#1              ;1087
0000a2  4909              LDR      r1,|L31.200|
0000a4  6008              STR      r0,[r1,#0]            ;1087  ; m_current_highest_peer_rank
0000a6  2c11              CMP      r4,#0x11              ;1088
0000a8  d002              BEQ      |L31.176|
0000aa  2c04              CMP      r4,#4                 ;1088
0000ac  d000              BEQ      |L31.176|
0000ae  2403              MOVS     r4,#3                 ;1090
                  |L31.176|
0000b0  4620              MOV      r0,r4                 ;1095
0000b2  e7ad              B        |L31.16|
;;;1097   #endif //PEER_MANAGER_ENABLED
                          ENDP

                  |L31.180|
                          DCD      m_module_initialized
                  |L31.184|
                          DCD      ||.constdata||+0x8
                  |L31.188|
                          DCD      m_peer_rank_initialized
                  |L31.192|
                          DCD      m_peer_rank_token
                  |L31.196|
                          DCD      m_highest_ranked_peer
                  |L31.200|
                          DCD      m_current_highest_peer_rank

                          AREA ||i.pm_peer_ranks_get||, CODE, READONLY, ALIGN=2

                  pm_peer_ranks_get PROC
;;;951    
;;;952    ret_code_t pm_peer_ranks_get(pm_peer_id_t * p_highest_ranked_peer,
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;953                                 uint32_t     * p_highest_rank,
;;;954                                 pm_peer_id_t * p_lowest_ranked_peer,
;;;955                                 uint32_t     * p_lowest_rank)
;;;956    {
000004  b085              SUB      sp,sp,#0x14
000006  4606              MOV      r6,r0
000008  460f              MOV      r7,r1
00000a  4690              MOV      r8,r2
00000c  4699              MOV      r9,r3
;;;957        VERIFY_MODULE_INITIALIZED();
00000e  bf00              NOP      
000010  482f              LDR      r0,|L32.208|
000012  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000014  b918              CBNZ     r0,|L32.30|
000016  2008              MOVS     r0,#8
                  |L32.24|
;;;958    
;;;959        pm_peer_id_t         peer_id      = pdb_next_peer_id_get(PM_PEER_ID_INVALID);
;;;960        uint32_t             peer_rank    = 0;
;;;961        //lint -save -e65 -e64
;;;962        pm_peer_data_t       peer_data    = {.length_words = BYTES_TO_WORDS(sizeof(peer_rank)),
;;;963                                             .p_peer_rank  = &peer_rank};
;;;964        //lint -restore
;;;965        ret_code_t           err_code     = pdb_peer_data_load(peer_id, PM_PEER_DATA_ID_PEER_RANK, &peer_data);
;;;966        uint32_t             highest_rank = 0;
;;;967        uint32_t             lowest_rank  = 0xFFFFFFFF;
;;;968        pm_peer_id_t         highest_ranked_peer = PM_PEER_ID_INVALID;
;;;969        pm_peer_id_t         lowest_ranked_peer  = PM_PEER_ID_INVALID;
;;;970    
;;;971        if (err_code == NRF_ERROR_INVALID_PARAM)
;;;972        {
;;;973            // No peer IDs exist.
;;;974            return NRF_ERROR_NOT_FOUND;
;;;975        }
;;;976    
;;;977        while ((err_code == NRF_SUCCESS) || (err_code == NRF_ERROR_NOT_FOUND))
;;;978        {
;;;979            if (err_code == NRF_ERROR_NOT_FOUND)
;;;980            {
;;;981                peer_rank = 0;
;;;982            }
;;;983            if (peer_rank >= highest_rank)
;;;984            {
;;;985                highest_rank      = peer_rank;
;;;986                highest_ranked_peer = peer_id;
;;;987            }
;;;988            if (peer_rank < lowest_rank)
;;;989            {
;;;990                lowest_rank      = peer_rank;
;;;991                lowest_ranked_peer = peer_id;
;;;992            }
;;;993            peer_id = pdb_next_peer_id_get(peer_id);
;;;994            err_code = pdb_peer_data_load(peer_id, PM_PEER_DATA_ID_PEER_RANK, &peer_data);
;;;995        }
;;;996        if (peer_id == PM_PEER_ID_INVALID)
;;;997        {
;;;998            err_code = NRF_SUCCESS;
;;;999            if (p_highest_ranked_peer != NULL)
;;;1000           {
;;;1001               *p_highest_ranked_peer = highest_ranked_peer;
;;;1002           }
;;;1003           if (p_highest_rank != NULL)
;;;1004           {
;;;1005               *p_highest_rank = highest_rank;
;;;1006           }
;;;1007           if (p_lowest_ranked_peer != NULL)
;;;1008           {
;;;1009               *p_lowest_ranked_peer = lowest_ranked_peer;
;;;1010           }
;;;1011           if (p_lowest_rank != NULL)
;;;1012           {
;;;1013               *p_lowest_rank = lowest_rank;
;;;1014           }
;;;1015       }
;;;1016       else
;;;1017       {
;;;1018           err_code = NRF_ERROR_INTERNAL;
;;;1019       }
;;;1020       return err_code;
;;;1021   }
000018  b005              ADD      sp,sp,#0x14
00001a  e8bd8ff0          POP      {r4-r11,pc}
                  |L32.30|
00001e  bf00              NOP                            ;957
000020  f64f70ff          MOV      r0,#0xffff            ;959
000024  f7fffffe          BL       pdb_next_peer_id_get
000028  4605              MOV      r5,r0                 ;959
00002a  2000              MOVS     r0,#0                 ;960
00002c  9004              STR      r0,[sp,#0x10]         ;960
00002e  4929              LDR      r1,|L32.212|
000030  c903              LDM      r1,{r0,r1}            ;962
000032  e9cd0102          STRD     r0,r1,[sp,#8]         ;962
000036  a804              ADD      r0,sp,#0x10           ;962
000038  9003              STR      r0,[sp,#0xc]          ;962
00003a  aa02              ADD      r2,sp,#8              ;965
00003c  2106              MOVS     r1,#6                 ;965
00003e  4628              MOV      r0,r5                 ;965
000040  f7fffffe          BL       pdb_peer_data_load
000044  4604              MOV      r4,r0                 ;965
000046  f04f0a00          MOV      r10,#0                ;966
00004a  f04f3bff          MOV      r11,#0xffffffff       ;967
00004e  f64f70ff          MOV      r0,#0xffff            ;968
000052  9001              STR      r0,[sp,#4]            ;968
000054  9000              STR      r0,[sp,#0]            ;969
000056  2c07              CMP      r4,#7                 ;971
000058  d101              BNE      |L32.94|
00005a  2005              MOVS     r0,#5                 ;974
00005c  e7dc              B        |L32.24|
                  |L32.94|
00005e  e019              B        |L32.148|
                  |L32.96|
000060  2c05              CMP      r4,#5                 ;979
000062  d101              BNE      |L32.104|
000064  2000              MOVS     r0,#0                 ;981
000066  9004              STR      r0,[sp,#0x10]         ;981
                  |L32.104|
000068  9804              LDR      r0,[sp,#0x10]         ;983
00006a  4550              CMP      r0,r10                ;983
00006c  d302              BCC      |L32.116|
00006e  f8dda010          LDR      r10,[sp,#0x10]        ;985
000072  9501              STR      r5,[sp,#4]            ;986
                  |L32.116|
000074  9804              LDR      r0,[sp,#0x10]         ;988
000076  4558              CMP      r0,r11                ;988
000078  d202              BCS      |L32.128|
00007a  f8ddb010          LDR      r11,[sp,#0x10]        ;990
00007e  9500              STR      r5,[sp,#0]            ;991
                  |L32.128|
000080  4628              MOV      r0,r5                 ;993
000082  f7fffffe          BL       pdb_next_peer_id_get
000086  4605              MOV      r5,r0                 ;993
000088  aa02              ADD      r2,sp,#8              ;994
00008a  2106              MOVS     r1,#6                 ;994
00008c  4628              MOV      r0,r5                 ;994
00008e  f7fffffe          BL       pdb_peer_data_load
000092  4604              MOV      r4,r0                 ;994
                  |L32.148|
000094  2c00              CMP      r4,#0                 ;977
000096  d0e3              BEQ      |L32.96|
000098  2c05              CMP      r4,#5                 ;977
00009a  d0e1              BEQ      |L32.96|
00009c  f64f70ff          MOV      r0,#0xffff            ;996
0000a0  4285              CMP      r5,r0                 ;996
0000a2  d112              BNE      |L32.202|
0000a4  2400              MOVS     r4,#0                 ;998
0000a6  b10e              CBZ      r6,|L32.172|
0000a8  9801              LDR      r0,[sp,#4]            ;1001
0000aa  8030              STRH     r0,[r6,#0]            ;1001
                  |L32.172|
0000ac  b10f              CBZ      r7,|L32.178|
0000ae  f8c7a000          STR      r10,[r7,#0]           ;1005
                  |L32.178|
0000b2  f1b80f00          CMP      r8,#0                 ;1007
0000b6  d002              BEQ      |L32.190|
0000b8  9800              LDR      r0,[sp,#0]            ;1009
0000ba  f8a80000          STRH     r0,[r8,#0]            ;1009
                  |L32.190|
0000be  f1b90f00          CMP      r9,#0                 ;1011
0000c2  d003              BEQ      |L32.204|
0000c4  f8c9b000          STR      r11,[r9,#0]           ;1013
0000c8  e000              B        |L32.204|
                  |L32.202|
0000ca  2403              MOVS     r4,#3                 ;1018
                  |L32.204|
0000cc  4620              MOV      r0,r4                 ;1020
0000ce  e7a3              B        |L32.24|
;;;1022   
                          ENDP

                  |L32.208|
                          DCD      m_module_initialized
                  |L32.212|
                          DCD      ||.constdata||

                          AREA ||i.pm_peers_delete||, CODE, READONLY, ALIGN=2

                  pm_peers_delete PROC
;;;929    
;;;930    ret_code_t pm_peers_delete(void)
000000  b570              PUSH     {r4-r6,lr}
;;;931    {
;;;932        VERIFY_MODULE_INITIALIZED();
000002  bf00              NOP      
000004  4810              LDR      r0,|L33.72|
000006  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000008  b908              CBNZ     r0,|L33.14|
00000a  2008              MOVS     r0,#8
                  |L33.12|
;;;933    
;;;934        m_deleting_all = true;
;;;935    
;;;936        pm_peer_id_t current_peer_id = pdb_next_peer_id_get(PM_PEER_ID_INVALID);
;;;937        while (current_peer_id != PM_PEER_ID_INVALID)
;;;938        {
;;;939            ret_code_t err_code = pm_peer_delete(current_peer_id);
;;;940            if (err_code != NRF_SUCCESS)
;;;941            {
;;;942                return NRF_ERROR_INTERNAL;
;;;943            }
;;;944    
;;;945            current_peer_id = pdb_next_peer_id_get(current_peer_id);
;;;946        }
;;;947    
;;;948        return NRF_SUCCESS;
;;;949    }
00000c  bd70              POP      {r4-r6,pc}
                  |L33.14|
00000e  bf00              NOP                            ;932
000010  2001              MOVS     r0,#1                 ;934
000012  490e              LDR      r1,|L33.76|
000014  7008              STRB     r0,[r1,#0]            ;934
000016  f64f70ff          MOV      r0,#0xffff            ;936
00001a  f7fffffe          BL       pdb_next_peer_id_get
00001e  4604              MOV      r4,r0                 ;936
000020  e00b              B        |L33.58|
                  |L33.34|
000022  4620              MOV      r0,r4                 ;939
000024  f7fffffe          BL       pm_peer_delete
000028  4605              MOV      r5,r0                 ;939
00002a  b10d              CBZ      r5,|L33.48|
00002c  2003              MOVS     r0,#3                 ;942
00002e  e7ed              B        |L33.12|
                  |L33.48|
000030  4620              MOV      r0,r4                 ;945
000032  f7fffffe          BL       pdb_next_peer_id_get
000036  4604              MOV      r4,r0                 ;945
000038  bf00              NOP                            ;946
                  |L33.58|
00003a  f64f70ff          MOV      r0,#0xffff            ;937
00003e  4284              CMP      r4,r0                 ;937
000040  d1ef              BNE      |L33.34|
000042  2000              MOVS     r0,#0                 ;948
000044  e7e2              B        |L33.12|
;;;950    
                          ENDP

000046  0000              DCW      0x0000
                  |L33.72|
                          DCD      m_module_initialized
                  |L33.76|
                          DCD      m_deleting_all

                          AREA ||i.pm_privacy_get||, CODE, READONLY, ALIGN=2

                  pm_privacy_get PROC
;;;617    
;;;618    ret_code_t pm_privacy_get(pm_privacy_params_t * p_privacy_params)
000000  b510              PUSH     {r4,lr}
;;;619    {
000002  4604              MOV      r4,r0
;;;620        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  480a              LDR      r0,|L34.48|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  b908              CBNZ     r0,|L34.16|
00000c  2008              MOVS     r0,#8
                  |L34.14|
;;;621        VERIFY_PARAM_NOT_NULL(p_privacy_params);
;;;622        VERIFY_PARAM_NOT_NULL(p_privacy_params->p_device_irk);
;;;623        return im_privacy_get(p_privacy_params);
;;;624    }
00000e  bd10              POP      {r4,pc}
                  |L34.16|
000010  bf00              NOP                            ;620
000012  bf00              NOP                            ;621
000014  b90c              CBNZ     r4,|L34.26|
000016  200e              MOVS     r0,#0xe               ;621
000018  e7f9              B        |L34.14|
                  |L34.26|
00001a  bf00              NOP                            ;621
00001c  bf00              NOP                            ;622
00001e  6860              LDR      r0,[r4,#4]            ;622
000020  b908              CBNZ     r0,|L34.38|
000022  200e              MOVS     r0,#0xe               ;622
000024  e7f3              B        |L34.14|
                  |L34.38|
000026  bf00              NOP                            ;622
000028  4620              MOV      r0,r4                 ;623
00002a  f7fffffe          BL       im_privacy_get
00002e  e7ee              B        |L34.14|
;;;625    
                          ENDP

                  |L34.48|
                          DCD      m_module_initialized

                          AREA ||i.pm_privacy_set||, CODE, READONLY, ALIGN=2

                  pm_privacy_set PROC
;;;609    
;;;610    ret_code_t pm_privacy_set(pm_privacy_params_t const * p_privacy_params)
000000  b510              PUSH     {r4,lr}
;;;611    {
000002  4604              MOV      r4,r0
;;;612        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4807              LDR      r0,|L35.36|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  b908              CBNZ     r0,|L35.16|
00000c  2008              MOVS     r0,#8
                  |L35.14|
;;;613        VERIFY_PARAM_NOT_NULL(p_privacy_params);
;;;614        return im_privacy_set(p_privacy_params);
;;;615    }
00000e  bd10              POP      {r4,pc}
                  |L35.16|
000010  bf00              NOP                            ;612
000012  bf00              NOP                            ;613
000014  b90c              CBNZ     r4,|L35.26|
000016  200e              MOVS     r0,#0xe               ;613
000018  e7f9              B        |L35.14|
                  |L35.26|
00001a  bf00              NOP                            ;613
00001c  4620              MOV      r0,r4                 ;614
00001e  f7fffffe          BL       im_privacy_set
000022  e7f4              B        |L35.14|
;;;616    
                          ENDP

                  |L35.36|
                          DCD      m_module_initialized

                          AREA ||i.pm_register||, CODE, READONLY, ALIGN=2

                  pm_register PROC
;;;532    
;;;533    ret_code_t pm_register(pm_evt_handler_t event_handler)
000000  4601              MOV      r1,r0
;;;534    {
;;;535        VERIFY_MODULE_INITIALIZED();
000002  bf00              NOP      
000004  480b              LDR      r0,|L36.52|
000006  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000008  b908              CBNZ     r0,|L36.14|
00000a  2008              MOVS     r0,#8
                  |L36.12|
;;;536    
;;;537        if (m_n_registrants >= MAX_REGISTRANTS)
;;;538        {
;;;539            return NRF_ERROR_NO_MEM;
;;;540        }
;;;541    
;;;542        m_evt_handlers[m_n_registrants] = event_handler;
;;;543        m_n_registrants += 1;
;;;544    
;;;545        return NRF_SUCCESS;
;;;546    }
00000c  4770              BX       lr
                  |L36.14|
00000e  bf00              NOP                            ;535
000010  4809              LDR      r0,|L36.56|
000012  7800              LDRB     r0,[r0,#0]            ;537  ; m_n_registrants
000014  2803              CMP      r0,#3                 ;537
000016  db01              BLT      |L36.28|
000018  2004              MOVS     r0,#4                 ;539
00001a  e7f7              B        |L36.12|
                  |L36.28|
00001c  4807              LDR      r0,|L36.60|
00001e  4a06              LDR      r2,|L36.56|
000020  7812              LDRB     r2,[r2,#0]            ;542  ; m_n_registrants
000022  f8401022          STR      r1,[r0,r2,LSL #2]     ;542
000026  4804              LDR      r0,|L36.56|
000028  7800              LDRB     r0,[r0,#0]            ;543  ; m_n_registrants
00002a  1c40              ADDS     r0,r0,#1              ;543
00002c  4a02              LDR      r2,|L36.56|
00002e  7010              STRB     r0,[r2,#0]            ;543
000030  2000              MOVS     r0,#0                 ;545
000032  e7eb              B        |L36.12|
;;;547    
                          ENDP

                  |L36.52|
                          DCD      m_module_initialized
                  |L36.56|
                          DCD      m_n_registrants
                  |L36.60|
                          DCD      m_evt_handlers

                          AREA ||i.pm_sec_params_reply||, CODE, READONLY, ALIGN=2

                  pm_sec_params_reply PROC
;;;580    
;;;581    ret_code_t pm_sec_params_reply(uint16_t conn_handle, ble_gap_sec_params_t * p_sec_params)
000000  4602              MOV      r2,r0
;;;582    {
;;;583        VERIFY_MODULE_INITIALIZED();
000002  bf00              NOP      
000004  4803              LDR      r0,|L37.20|
000006  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000008  b908              CBNZ     r0,|L37.14|
00000a  2008              MOVS     r0,#8
                  |L37.12|
;;;584        return NRF_SUCCESS;
;;;585    }
00000c  4770              BX       lr
                  |L37.14|
00000e  bf00              NOP                            ;583
000010  2000              MOVS     r0,#0                 ;584
000012  e7fb              B        |L37.12|
;;;586    
                          ENDP

                  |L37.20|
                          DCD      m_module_initialized

                          AREA ||i.pm_sec_params_set||, CODE, READONLY, ALIGN=2

                  pm_sec_params_set PROC
;;;548    
;;;549    ret_code_t pm_sec_params_set(ble_gap_sec_params_t * p_sec_params)
000000  b570              PUSH     {r4-r6,lr}
;;;550    {
000002  4604              MOV      r4,r0
;;;551        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4806              LDR      r0,|L38.32|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  b908              CBNZ     r0,|L38.16|
00000c  2008              MOVS     r0,#8
                  |L38.14|
;;;552    
;;;553        ret_code_t err_code;
;;;554    
;;;555        err_code = sm_sec_params_set(p_sec_params);
;;;556    
;;;557        // NRF_ERROR_INVALID_PARAM if parameters are invalid,
;;;558        // NRF_SUCCESS             otherwise.
;;;559        return err_code;
;;;560    }
00000e  bd70              POP      {r4-r6,pc}
                  |L38.16|
000010  bf00              NOP                            ;551
000012  4620              MOV      r0,r4                 ;555
000014  f7fffffe          BL       sm_sec_params_set
000018  4605              MOV      r5,r0                 ;555
00001a  4628              MOV      r0,r5                 ;559
00001c  e7f7              B        |L38.14|
;;;561    
                          ENDP

00001e  0000              DCW      0x0000
                  |L38.32|
                          DCD      m_module_initialized

                          AREA ||i.pm_sm_evt_handler||, CODE, READONLY, ALIGN=2

                  pm_sm_evt_handler PROC
;;;208     */
;;;209    void pm_sm_evt_handler(sm_evt_t const * p_sm_evt)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;210    {
000004  b086              SUB      sp,sp,#0x18
000006  4604              MOV      r4,r0
;;;211        bool find_peer_id = true;
000008  2501              MOVS     r5,#1
;;;212        bool send_evt     = true;
00000a  2601              MOVS     r6,#1
;;;213        pm_evt_t pm_evt;
;;;214        memset(&pm_evt, 0, sizeof(pm_evt_t));
00000c  2114              MOVS     r1,#0x14
00000e  a801              ADD      r0,sp,#4
000010  f7fffffe          BL       __aeabi_memclr4
;;;215        pm_evt.conn_handle = p_sm_evt->conn_handle;
000014  8860              LDRH     r0,[r4,#2]
000016  f8ad0006          STRH     r0,[sp,#6]
;;;216    
;;;217        switch (p_sm_evt->evt_id)
00001a  7820              LDRB     r0,[r4,#0]
00001c  280d              CMP      r0,#0xd
00001e  d270              BCS      |L39.258|
000020  e8dff000          TBB      [pc,r0]
000024  b2070a26          DCB      0xb2,0x07,0x0a,0x26
000028  3d526270          DCB      0x3d,0x52,0x62,0x70
00002c  7e8e9498          DCB      0x7e,0x8e,0x94,0x98
000030  ae00              DCB      0xae,0x00
;;;218        {
;;;219            case SM_EVT_SLAVE_SECURITY_REQ:
;;;220                find_peer_id = false;
000032  2500              MOVS     r5,#0
;;;221                send_evt     = false;
000034  2600              MOVS     r6,#0
;;;222                break;
000036  e0a9              B        |L39.396|
;;;223    
;;;224            case SM_EVT_SEC_PROCEDURE_START:
;;;225            {
;;;226                pm_evt.evt_id = PM_EVT_CONN_SEC_START;
000038  2001              MOVS     r0,#1
00003a  f88d0004          STRB     r0,[sp,#4]
;;;227                bool pairing = p_sm_evt->params.sec_procedure_start.procedure
00003e  7920              LDRB     r0,[r4,#4]
000040  b108              CBZ      r0,|L39.70|
000042  2001              MOVS     r0,#1
000044  e000              B        |L39.72|
                  |L39.70|
000046  2000              MOVS     r0,#0
                  |L39.72|
000048  4607              MOV      r7,r0
;;;228                                    != PM_LINK_SECURED_PROCEDURE_ENCRYPTION;
;;;229                bool bonding = p_sm_evt->params.sec_procedure_start.procedure
00004a  7920              LDRB     r0,[r4,#4]
00004c  2801              CMP      r0,#1
00004e  d100              BNE      |L39.82|
000050  e000              B        |L39.84|
                  |L39.82|
000052  2000              MOVS     r0,#0
                  |L39.84|
000054  4680              MOV      r8,r0
;;;230                                    == PM_LINK_SECURED_PROCEDURE_BONDING;
;;;231                ble_conn_state_user_flag_set(p_sm_evt->conn_handle, m_pairing_flag_id, pairing);
000056  8860              LDRH     r0,[r4,#2]
000058  463a              MOV      r2,r7
00005a  4953              LDR      r1,|L39.424|
00005c  7809              LDRB     r1,[r1,#0]  ; m_pairing_flag_id
00005e  f7fffffe          BL       ble_conn_state_user_flag_set
;;;232                ble_conn_state_user_flag_set(p_sm_evt->conn_handle, m_bonding_flag_id, bonding);
000062  8860              LDRH     r0,[r4,#2]
000064  4642              MOV      r2,r8
000066  4951              LDR      r1,|L39.428|
000068  7809              LDRB     r1,[r1,#0]  ; m_bonding_flag_id
00006a  f7fffffe          BL       ble_conn_state_user_flag_set
;;;233                break;
00006e  e08d              B        |L39.396|
;;;234            }
;;;235    
;;;236            case SM_EVT_PAIRING_SUCCESS:
;;;237                pm_evt.evt_id = PM_EVT_CONN_SEC_SUCCEEDED;
000070  2002              MOVS     r0,#2
000072  f88d0004          STRB     r0,[sp,#4]
;;;238                pm_evt.params.conn_sec_succeeded.procedure =
000076  7920              LDRB     r0,[r4,#4]
000078  b108              CBZ      r0,|L39.126|
;;;239                            p_sm_evt->params.pairing_success.bonded
;;;240                            ? PM_LINK_SECURED_PROCEDURE_BONDING
00007a  2001              MOVS     r0,#1
00007c  e000              B        |L39.128|
                  |L39.126|
;;;241                            : PM_LINK_SECURED_PROCEDURE_PAIRING;
00007e  2002              MOVS     r0,#2
                  |L39.128|
000080  f88d000c          STRB     r0,[sp,#0xc]
;;;242                ble_conn_state_user_flag_set(p_sm_evt->conn_handle, m_pairing_flag_id, true);
000084  8860              LDRH     r0,[r4,#2]
000086  2201              MOVS     r2,#1
000088  4947              LDR      r1,|L39.424|
00008a  7809              LDRB     r1,[r1,#0]  ; m_pairing_flag_id
00008c  f7fffffe          BL       ble_conn_state_user_flag_set
;;;243                ble_conn_state_user_flag_set(p_sm_evt->conn_handle,
000090  7922              LDRB     r2,[r4,#4]
000092  8860              LDRH     r0,[r4,#2]
000094  4945              LDR      r1,|L39.428|
000096  7809              LDRB     r1,[r1,#0]  ; m_bonding_flag_id
000098  f7fffffe          BL       ble_conn_state_user_flag_set
;;;244                                             m_bonding_flag_id,
;;;245                                             p_sm_evt->params.pairing_success.bonded
;;;246                );
;;;247                break;
00009c  e076              B        |L39.396|
;;;248    
;;;249            case SM_EVT_PAIRING_FAIL:
;;;250                pm_evt.evt_id = PM_EVT_CONN_SEC_FAILED;
00009e  2003              MOVS     r0,#3
0000a0  f88d0004          STRB     r0,[sp,#4]
;;;251                pm_evt.params.conn_sec_failed.procedure =
0000a4  8860              LDRH     r0,[r4,#2]
0000a6  4941              LDR      r1,|L39.428|
0000a8  7809              LDRB     r1,[r1,#0]  ; m_bonding_flag_id
0000aa  f7fffffe          BL       ble_conn_state_user_flag_get
0000ae  b108              CBZ      r0,|L39.180|
;;;252                            ble_conn_state_user_flag_get(p_sm_evt->conn_handle, m_bonding_flag_id)
;;;253                            ? PM_LINK_SECURED_PROCEDURE_BONDING
0000b0  2001              MOVS     r0,#1
0000b2  e000              B        |L39.182|
                  |L39.180|
;;;254                            : PM_LINK_SECURED_PROCEDURE_PAIRING;
0000b4  2002              MOVS     r0,#2
                  |L39.182|
0000b6  f88d000c          STRB     r0,[sp,#0xc]
;;;255                pm_evt.params.conn_sec_failed.error_src
0000ba  79a1              LDRB     r1,[r4,#6]
0000bc  f88d1010          STRB     r1,[sp,#0x10]
;;;256                    = p_sm_evt->params.pairing_failed.error_src;
;;;257                pm_evt.params.conn_sec_failed.error
0000c0  88a1              LDRH     r1,[r4,#4]
0000c2  f8ad100e          STRH     r1,[sp,#0xe]
;;;258                    = p_sm_evt->params.pairing_failed.error;
;;;259                break;
0000c6  e061              B        |L39.396|
;;;260    
;;;261            case SM_EVT_LINK_ENCRYPTION_UPDATE:
;;;262                if (!ble_conn_state_user_flag_get(p_sm_evt->conn_handle, m_pairing_flag_id))
0000c8  8860              LDRH     r0,[r4,#2]
0000ca  4937              LDR      r1,|L39.424|
0000cc  7809              LDRB     r1,[r1,#0]  ; m_pairing_flag_id
0000ce  f7fffffe          BL       ble_conn_state_user_flag_get
0000d2  b930              CBNZ     r0,|L39.226|
;;;263                {
;;;264                    pm_evt.evt_id = PM_EVT_CONN_SEC_SUCCEEDED;
0000d4  2002              MOVS     r0,#2
0000d6  f88d0004          STRB     r0,[sp,#4]
;;;265                    pm_evt.params.conn_sec_succeeded.procedure = PM_LINK_SECURED_PROCEDURE_ENCRYPTION;
0000da  2000              MOVS     r0,#0
0000dc  f88d000c          STRB     r0,[sp,#0xc]
0000e0  e001              B        |L39.230|
                  |L39.226|
;;;266                }
;;;267                else
;;;268                {
;;;269                    find_peer_id = false;
0000e2  2500              MOVS     r5,#0
;;;270                    send_evt     = false;
0000e4  2600              MOVS     r6,#0
                  |L39.230|
;;;271                }
;;;272                break;
0000e6  e051              B        |L39.396|
;;;273    
;;;274            case SM_EVT_LINK_ENCRYPTION_FAILED:
;;;275                pm_evt.evt_id = PM_EVT_CONN_SEC_FAILED;
0000e8  2003              MOVS     r0,#3
0000ea  f88d0004          STRB     r0,[sp,#4]
;;;276                pm_evt.params.conn_sec_failed.procedure
0000ee  2000              MOVS     r0,#0
0000f0  f88d000c          STRB     r0,[sp,#0xc]
;;;277                                = PM_LINK_SECURED_PROCEDURE_ENCRYPTION;
;;;278                pm_evt.params.conn_sec_failed.error_src
0000f4  79a1              LDRB     r1,[r4,#6]
0000f6  f88d1010          STRB     r1,[sp,#0x10]
;;;279                                = p_sm_evt->params.link_encryption_failed.error_src;
;;;280                pm_evt.params.conn_sec_failed.error
0000fa  88a1              LDRH     r1,[r4,#4]
0000fc  f8ad100e          STRH     r1,[sp,#0xe]
;;;281                                = p_sm_evt->params.link_encryption_failed.error;
;;;282                break;
000100  e044              B        |L39.396|
                  |L39.258|
000102  e041              B        |L39.392|
;;;283    
;;;284            case SM_EVT_BONDING_INFO_STORED:
;;;285                pm_evt.evt_id  = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
000104  2007              MOVS     r0,#7
000106  f88d0004          STRB     r0,[sp,#4]
;;;286                pm_evt.peer_id = p_sm_evt->params.bonding_info_stored.peer_id;
00010a  88a0              LDRH     r0,[r4,#4]
00010c  f8ad0008          STRH     r0,[sp,#8]
;;;287                pm_evt.params.peer_data_update_succeeded.data_id = PM_PEER_DATA_ID_BONDING;
000110  2007              MOVS     r0,#7
000112  f88d000c          STRB     r0,[sp,#0xc]
;;;288                pm_evt.params.peer_data_update_succeeded.action  = PM_PEER_DATA_OP_UPDATE;
000116  2100              MOVS     r1,#0
000118  f88d100d          STRB     r1,[sp,#0xd]
;;;289                find_peer_id = false;
00011c  2500              MOVS     r5,#0
;;;290                break;
00011e  e035              B        |L39.396|
;;;291    
;;;292            case SM_EVT_ERROR_BONDING_INFO:
;;;293                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_FAILED;
000120  2008              MOVS     r0,#8
000122  f88d0004          STRB     r0,[sp,#4]
;;;294                pm_evt.peer_id = p_sm_evt->params.error_bonding_info.peer_id;
000126  88a0              LDRH     r0,[r4,#4]
000128  f8ad0008          STRH     r0,[sp,#8]
;;;295                pm_evt.params.peer_data_update_failed.data_id = PM_PEER_DATA_ID_BONDING;
00012c  2007              MOVS     r0,#7
00012e  f88d000c          STRB     r0,[sp,#0xc]
;;;296                pm_evt.params.peer_data_update_failed.action  = PM_PEER_DATA_OP_UPDATE;
000132  2100              MOVS     r1,#0
000134  f88d100d          STRB     r1,[sp,#0xd]
;;;297                pm_evt.params.peer_data_update_failed.error
000138  68a1              LDR      r1,[r4,#8]
00013a  9105              STR      r1,[sp,#0x14]
;;;298                    = p_sm_evt->params.error_bonding_info.error;
;;;299                find_peer_id = false;
00013c  2500              MOVS     r5,#0
;;;300                break;
00013e  e025              B        |L39.396|
;;;301    
;;;302            case SM_EVT_ERROR_UNEXPECTED:
;;;303                pm_evt.evt_id = PM_EVT_ERROR_UNEXPECTED;
000140  2006              MOVS     r0,#6
000142  f88d0004          STRB     r0,[sp,#4]
;;;304                pm_evt.params.error_unexpected.error = p_sm_evt->params.error_unexpected.error;
000146  6860              LDR      r0,[r4,#4]
000148  9003              STR      r0,[sp,#0xc]
;;;305                break;
00014a  e01f              B        |L39.396|
;;;306    
;;;307            case SM_EVT_ERROR_NO_MEM:
;;;308                pm_evt.evt_id = PM_EVT_STORAGE_FULL;
00014c  2005              MOVS     r0,#5
00014e  f88d0004          STRB     r0,[sp,#4]
;;;309                break;
000152  e01b              B        |L39.396|
;;;310    
;;;311            case SM_EVT_ERROR_SMP_TIMEOUT:
;;;312                pm_evt.evt_id = PM_EVT_CONN_SEC_FAILED;
000154  2003              MOVS     r0,#3
000156  f88d0004          STRB     r0,[sp,#4]
;;;313                pm_evt.params.conn_sec_failed.procedure
00015a  8860              LDRH     r0,[r4,#2]
00015c  4913              LDR      r1,|L39.428|
00015e  7809              LDRB     r1,[r1,#0]  ; m_bonding_flag_id
000160  f7fffffe          BL       ble_conn_state_user_flag_get
000164  b108              CBZ      r0,|L39.362|
;;;314                            = ble_conn_state_user_flag_get(p_sm_evt->conn_handle, m_bonding_flag_id)
;;;315                            ? PM_LINK_SECURED_PROCEDURE_BONDING
000166  2001              MOVS     r0,#1
000168  e000              B        |L39.364|
                  |L39.362|
;;;316                            : PM_LINK_SECURED_PROCEDURE_PAIRING;
00016a  2002              MOVS     r0,#2
                  |L39.364|
00016c  f88d000c          STRB     r0,[sp,#0xc]
;;;317                pm_evt.params.conn_sec_failed.error_src  = BLE_GAP_SEC_STATUS_SOURCE_LOCAL;
000170  2100              MOVS     r1,#0
000172  f88d1010          STRB     r1,[sp,#0x10]
;;;318                pm_evt.params.conn_sec_failed.error      = PM_CONN_SEC_ERROR_SMP_TIMEOUT;
000176  f2411101          MOV      r1,#0x1101
00017a  f8ad100e          STRH     r1,[sp,#0xe]
;;;319                break;
00017e  e005              B        |L39.396|
;;;320    
;;;321            case SM_EVT_CONN_SEC_CONFIG_REQ:
;;;322                pm_evt.evt_id = PM_EVT_CONN_SEC_CONFIG_REQ;
000180  2004              MOVS     r0,#4
000182  f88d0004          STRB     r0,[sp,#4]
;;;323                break;
000186  e001              B        |L39.396|
                  |L39.392|
;;;324    
;;;325            default:
;;;326                send_evt = false;
000188  2600              MOVS     r6,#0
;;;327                break;
00018a  bf00              NOP      
                  |L39.396|
00018c  bf00              NOP                            ;222
;;;328        }
;;;329    
;;;330        if (find_peer_id)
00018e  b125              CBZ      r5,|L39.410|
;;;331        {
;;;332            pm_evt.peer_id = im_peer_id_get_by_conn_handle(p_sm_evt->conn_handle);
000190  8860              LDRH     r0,[r4,#2]
000192  f7fffffe          BL       im_peer_id_get_by_conn_handle
000196  f8ad0008          STRH     r0,[sp,#8]
                  |L39.410|
;;;333        }
;;;334    
;;;335        if (send_evt)
00019a  b116              CBZ      r6,|L39.418|
;;;336        {
;;;337            evt_send(&pm_evt);
00019c  a801              ADD      r0,sp,#4
00019e  f7fffffe          BL       evt_send
                  |L39.418|
;;;338        }
;;;339    }
0001a2  b006              ADD      sp,sp,#0x18
0001a4  e8bd81f0          POP      {r4-r8,pc}
;;;340    
                          ENDP

                  |L39.424|
                          DCD      m_pairing_flag_id
                  |L39.428|
                          DCD      m_bonding_flag_id

                          AREA ||i.pm_whitelist_get||, CODE, READONLY, ALIGN=2

                  pm_whitelist_get PROC
;;;634    
;;;635    ret_code_t pm_whitelist_get(ble_gap_addr_t * p_addrs,
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;636                                uint32_t       * p_addr_cnt,
;;;637                                ble_gap_irk_t  * p_irks,
;;;638                                uint32_t       * p_irk_cnt)
;;;639    {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;640        VERIFY_MODULE_INITIALIZED();
00000c  bf00              NOP      
00000e  480b              LDR      r0,|L40.60|
000010  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000012  b910              CBNZ     r0,|L40.26|
000014  2008              MOVS     r0,#8
                  |L40.22|
;;;641    
;;;642        if (((p_addrs == NULL) && (p_irks     == NULL)) ||
;;;643            ((p_addrs != NULL) && (p_addr_cnt == NULL)) ||
;;;644            ((p_irks  != NULL) && (p_irk_cnt  == NULL)))
;;;645        {
;;;646            // The buffers can't be both NULL, and if a buffer is provided its size must be specified.
;;;647            return NRF_ERROR_NULL;
;;;648        }
;;;649    
;;;650        return im_whitelist_get(p_addrs, p_addr_cnt, p_irks, p_irk_cnt);
;;;651    }
000016  e8bd81f0          POP      {r4-r8,pc}
                  |L40.26|
00001a  bf00              NOP                            ;640
00001c  b904              CBNZ     r4,|L40.32|
00001e  b11d              CBZ      r5,|L40.40|
                  |L40.32|
000020  b104              CBZ      r4,|L40.36|
000022  b10e              CBZ      r6,|L40.40|
                  |L40.36|
000024  b115              CBZ      r5,|L40.44|
000026  b90f              CBNZ     r7,|L40.44|
                  |L40.40|
000028  200e              MOVS     r0,#0xe               ;647
00002a  e7f4              B        |L40.22|
                  |L40.44|
00002c  463b              MOV      r3,r7                 ;650
00002e  462a              MOV      r2,r5                 ;650
000030  4631              MOV      r1,r6                 ;650
000032  4620              MOV      r0,r4                 ;650
000034  f7fffffe          BL       im_whitelist_get
000038  e7ed              B        |L40.22|
;;;652    
                          ENDP

00003a  0000              DCW      0x0000
                  |L40.60|
                          DCD      m_module_initialized

                          AREA ||i.pm_whitelist_set||, CODE, READONLY, ALIGN=2

                  pm_whitelist_set PROC
;;;626    
;;;627    ret_code_t pm_whitelist_set(pm_peer_id_t const * p_peers,
000000  b570              PUSH     {r4-r6,lr}
;;;628                                uint32_t             peer_cnt)
;;;629    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;630        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4805              LDR      r0,|L41.32|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b908              CBNZ     r0,|L41.18|
00000e  2008              MOVS     r0,#8
                  |L41.16|
;;;631        return im_whitelist_set(p_peers, peer_cnt);
;;;632    }
000010  bd70              POP      {r4-r6,pc}
                  |L41.18|
000012  bf00              NOP                            ;630
000014  4629              MOV      r1,r5                 ;631
000016  4620              MOV      r0,r4                 ;631
000018  f7fffffe          BL       im_whitelist_set
00001c  e7f8              B        |L41.16|
;;;633    
                          ENDP

00001e  0000              DCW      0x0000
                  |L41.32|
                          DCD      m_module_initialized

                          AREA ||i.rank_init||, CODE, READONLY, ALIGN=2

                  rank_init PROC
;;;1025    */
;;;1026   static void rank_init(void)
000000  b510              PUSH     {r4,lr}
;;;1027   {
;;;1028       ret_code_t err_code = pm_peer_ranks_get(&m_highest_ranked_peer,
000002  2300              MOVS     r3,#0
000004  461a              MOV      r2,r3
000006  4906              LDR      r1,|L42.32|
000008  4806              LDR      r0,|L42.36|
00000a  f7fffffe          BL       pm_peer_ranks_get
00000e  4604              MOV      r4,r0
;;;1029                                               &m_current_highest_peer_rank,
;;;1030                                               NULL,
;;;1031                                               NULL);
;;;1032       if ((err_code == NRF_SUCCESS) || (err_code == NRF_ERROR_NOT_FOUND))
000010  b10c              CBZ      r4,|L42.22|
000012  2c05              CMP      r4,#5
000014  d102              BNE      |L42.28|
                  |L42.22|
;;;1033       {
;;;1034           m_peer_rank_initialized = true;
000016  2001              MOVS     r0,#1
000018  4903              LDR      r1,|L42.40|
00001a  7008              STRB     r0,[r1,#0]
                  |L42.28|
;;;1035       }
;;;1036   }
00001c  bd10              POP      {r4,pc}
;;;1037   
                          ENDP

00001e  0000              DCW      0x0000
                  |L42.32|
                          DCD      m_current_highest_peer_rank
                  |L42.36|
                          DCD      m_highest_ranked_peer
                  |L42.40|
                          DCD      m_peer_rank_initialized

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  m_evt_handlers
                          %        12

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  0001              DCW      0x0001
000002  0000              DCB      0x00,0x00
                          DCD      0x00000000
000008  0001              DCW      0x0001
00000a  0600              DCB      0x06,0x00
                          DCD      m_current_highest_peer_rank

                          AREA ||.data||, DATA, ALIGN=2

                  m_module_initialized
000000  00                DCB      0x00
                  m_peer_rank_initialized
000001  00                DCB      0x00
                  m_deleting_all
000002  0000              DCB      0x00,0x00
                  m_peer_rank_token
                          DCD      0x00000000
                  m_current_highest_peer_rank
                          DCD      0x00000000
                  m_highest_ranked_peer
00000c  0000              DCB      0x00,0x00
                  m_n_registrants
00000e  00                DCB      0x00
                  m_pairing_flag_id
00000f  00                DCB      0x00
                  m_bonding_flag_id
000010  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\ble\\peer_manager\\peer_manager.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_peer_manager_c_cf900614____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___14_peer_manager_c_cf900614____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_peer_manager_c_cf900614____REVSH|
#line 402
|__asm___14_peer_manager_c_cf900614____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_peer_manager_c_cf900614____RRX|
#line 587
|__asm___14_peer_manager_c_cf900614____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
