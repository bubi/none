; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\_build\sdk_mapped_flags.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\sdk_mapped_flags.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\config\bluetoothds_template_pca10040_s132 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_dtm -I..\..\..\..\..\..\components\ble\ble_racp -I..\..\..\..\..\..\components\ble\ble_services\ble_ancs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_ans_c -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\ble\ble_services\ble_cscs -I..\..\..\..\..\..\components\ble\ble_services\ble_cts_c -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_gls -I..\..\..\..\..\..\components\ble\ble_services\ble_hids -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs -I..\..\..\..\..\..\components\ble\ble_services\ble_hrs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_hts -I..\..\..\..\..\..\components\ble\ble_services\ble_ias -I..\..\..\..\..\..\components\ble\ble_services\ble_ias_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs -I..\..\..\..\..\..\components\ble\ble_services\ble_lbs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_lls -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\ble\ble_services\ble_nus_c -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs -I..\..\..\..\..\..\components\ble\ble_services\ble_rscs_c -I..\..\..\..\..\..\components\ble\ble_services\ble_tps -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_qwr -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\drivers_nrf\adc -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\comp -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\i2s -I..\..\..\..\..\..\components\drivers_nrf\lpcomp -I..\..\..\..\..\..\components\drivers_nrf\pdm -I..\..\..\..\..\..\components\drivers_nrf\ppi -I..\..\..\..\..\..\components\drivers_nrf\pwm -I..\..\..\..\..\..\components\drivers_nrf\qdec -I..\..\..\..\..\..\components\drivers_nrf\rng -I..\..\..\..\..\..\components\drivers_nrf\rtc -I..\..\..\..\..\..\components\drivers_nrf\saadc -I..\..\..\..\..\..\components\drivers_nrf\spi_master -I..\..\..\..\..\..\components\drivers_nrf\spi_slave -I..\..\..\..\..\..\components\drivers_nrf\swi -I..\..\..\..\..\..\components\drivers_nrf\timer -I..\..\..\..\..\..\components\drivers_nrf\twi_master -I..\..\..\..\..\..\components\drivers_nrf\twis_slave -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\drivers_nrf\wdt -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\crc32 -I..\..\..\..\..\..\components\libraries\csense -I..\..\..\..\..\..\components\libraries\csense_drv -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fifo -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\hardfault -I..\..\..\..\..\..\components\libraries\hci -I..\..\..\..\..\..\components\libraries\led_softblink -I..\..\..\..\..\..\components\libraries\log -I..\..\..\..\..\..\components\libraries\log\src -I..\..\..\..\..\..\components\libraries\low_power_pwm -I..\..\..\..\..\..\components\libraries\mailbox -I..\..\..\..\..\..\components\libraries\mem_manager -I..\..\..\..\..\..\components\libraries\pwm -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\slip -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\twi -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common\softdevice_handler -I..\..\..\..\..\..\components\softdevice\s132\headers -I..\..\..\..\..\..\components\softdevice\s132\headers\nrf52 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\bsp -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\none -I..\..\..\..\..\..\components\drivers_ext\LS013B7DH06 -I..\..\..\..\..\..\external\ugfx -I..\..\..\..\..\..\external\ugfx\drivers\gdisp\framebuffer -I..\..\..\..\..\..\external\ugfx\src\gdisp -I..\..\..\..\..\..\external\ugfx\drivers\gdisp\ -IC:\Users\Michael\Documents\none\nRF5_SDK_12.1.0_0d23e2a\examples\ble_peripheral\none\pca10040\s132\arm5_no_packs\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.9.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=521 -D_RTE_ -DNRF52 -DBLE_STACK_SUPPORT_REQD -D__HEAP_SIZE=0 -DS132 -DNRF_SD_BLE_API_VERSION=3 -DBOARD_PCA10040 -DNRF52_PAN_12 -DNRF52_PAN_15 -DNRF52_PAN_20 -DNRF52_PAN_30 -DNRF52_PAN_31 -DNRF52_PAN_36 -DNRF52_PAN_51 -DNRF52_PAN_53 -DNRF52_PAN_54 -DNRF52_PAN_55 -DNRF52_PAN_58 -DNRF52_PAN_62 -DNRF52_PAN_63 -DNRF52_PAN_64 -DCONFIG_GPIO_AS_PINRESET -DSOFTDEVICE_PRESENT -DNRF52832 -DNRF52 -DSWI_DISABLE0 --omf_browse=.\_build\sdk_mapped_flags.crf ..\..\..\..\..\..\components\libraries\util\sdk_mapped_flags.c]
                          THUMB

                          AREA ||i.sdk_mapped_flags_bulk_update_by_key||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_bulk_update_by_key PROC
;;;81     
;;;82     void sdk_mapped_flags_bulk_update_by_key(uint16_t           * p_keys,
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;83                                              sdk_mapped_flags_t * p_flags,
;;;84                                              uint32_t             n_flag_collections,
;;;85                                              uint16_t             key,
;;;86                                              bool                 value)
;;;87     {
000004  4604              MOV      r4,r0
000006  4615              MOV      r5,r2
000008  461e              MOV      r6,r3
00000a  f8ddc01c          LDR      r12,[sp,#0x1c]
;;;88         if ((p_keys != NULL) && (p_flags != NULL) && (n_flag_collections > 0))
00000e  b384              CBZ      r4,|L1.114|
000010  b379              CBZ      r1,|L1.114|
000012  b375              CBZ      r5,|L1.114|
;;;89         {
;;;90             for (uint32_t i = 0; i < SDK_MAPPED_FLAGS_N_KEYS; i++)
000014  2000              MOVS     r0,#0
000016  e02a              B        |L1.110|
                  |L1.24|
;;;91             {
;;;92                 if (p_keys[i] == key)
000018  f8342010          LDRH     r2,[r4,r0,LSL #1]
00001c  42b2              CMP      r2,r6
00001e  d125              BNE      |L1.108|
;;;93                 {
;;;94                     for (uint32_t j = 0; j < n_flag_collections; j++)
000020  2200              MOVS     r2,#0
000022  e01f              B        |L1.100|
                  |L1.36|
;;;95                     {
;;;96                         if (value)
000024  f1bc0f00          CMP      r12,#0
000028  d00d              BEQ      |L1.70|
;;;97                         {
;;;98                             sdk_mapped_flags_set_by_index(&p_flags[j], i);
00002a  188b              ADDS     r3,r1,r2
00002c  b287              UXTH     r7,r0
00002e  f8938000          LDRB     r8,[r3,#0]
000032  f04f0901          MOV      r9,#1
000036  fa09f907          LSL      r9,r9,r7
00003a  ea480809          ORR      r8,r8,r9
00003e  f8838000          STRB     r8,[r3,#0]
000042  bf00              NOP      
000044  e00d              B        |L1.98|
                  |L1.70|
;;;99                         }
;;;100                        else
;;;101                        {
;;;102                            sdk_mapped_flags_clear_by_index(&p_flags[j], i);
000046  188b              ADDS     r3,r1,r2
000048  b287              UXTH     r7,r0
00004a  f8938000          LDRB     r8,[r3,#0]
00004e  f04f0901          MOV      r9,#1
000052  fa09f907          LSL      r9,r9,r7
000056  ea280809          BIC      r8,r8,r9
00005a  f8838000          STRB     r8,[r3,#0]
00005e  bf00              NOP      
000060  bf00              NOP      
                  |L1.98|
000062  1c52              ADDS     r2,r2,#1              ;94
                  |L1.100|
000064  42aa              CMP      r2,r5                 ;94
000066  d3dd              BCC      |L1.36|
                  |L1.104|
;;;103                        }
;;;104                    }
;;;105                    return;
;;;106                }
;;;107            }
;;;108        }
;;;109    }
000068  e8bd83f0          POP      {r4-r9,pc}
                  |L1.108|
00006c  1c40              ADDS     r0,r0,#1              ;90
                  |L1.110|
00006e  2808              CMP      r0,#8                 ;90
000070  d3d2              BCC      |L1.24|
                  |L1.114|
000072  bf00              NOP      
000074  e7f8              B        |L1.104|
;;;110    
                          ENDP


                          AREA ||i.sdk_mapped_flags_first_key_index_get||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_first_key_index_get PROC
;;;59     
;;;60     uint16_t sdk_mapped_flags_first_key_index_get(sdk_mapped_flags_t flags)
000000  b570              PUSH     {r4-r6,lr}
;;;61     {
000002  4605              MOV      r5,r0
;;;62         for (uint16_t i = 0; i < SDK_MAPPED_FLAGS_N_KEYS; i++)
000004  2400              MOVS     r4,#0
000006  e008              B        |L2.26|
                  |L2.8|
;;;63         {
;;;64             if (sdk_mapped_flags_get_by_index(flags, i))
000008  4621              MOV      r1,r4
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       sdk_mapped_flags_get_by_index
000010  b108              CBZ      r0,|L2.22|
;;;65             {
;;;66                 return i;
000012  4620              MOV      r0,r4
                  |L2.20|
;;;67             }
;;;68         }
;;;69         return SDK_MAPPED_FLAGS_INVALID_INDEX;
;;;70     }
000014  bd70              POP      {r4-r6,pc}
                  |L2.22|
000016  1c60              ADDS     r0,r4,#1              ;62
000018  b284              UXTH     r4,r0                 ;62
                  |L2.26|
00001a  2c08              CMP      r4,#8                 ;62
00001c  dbf4              BLT      |L2.8|
00001e  f64f70ff          MOV      r0,#0xffff            ;69
000022  e7f7              B        |L2.20|
;;;71     
                          ENDP


                          AREA ||i.sdk_mapped_flags_get_by_index||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_get_by_index PROC
;;;52      */
;;;53     static __INLINE bool sdk_mapped_flags_get_by_index(sdk_mapped_flags_t flags, uint16_t index)
000000  4602              MOV      r2,r0
;;;54     {
;;;55         return ((flags & (1 << index)) != 0);
000002  2001              MOVS     r0,#1
000004  4088              LSLS     r0,r0,r1
000006  4010              ANDS     r0,r0,r2
000008  b108              CBZ      r0,|L3.14|
00000a  2001              MOVS     r0,#1
                  |L3.12|
;;;56     }
00000c  4770              BX       lr
                  |L3.14|
00000e  2000              MOVS     r0,#0                 ;55
000010  e7fc              B        |L3.12|
;;;57     
                          ENDP


                          AREA ||i.sdk_mapped_flags_get_by_key||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_get_by_key PROC
;;;111    
;;;112    bool sdk_mapped_flags_get_by_key(uint16_t * p_keys, sdk_mapped_flags_t flags, uint16_t key)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;113    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;114        if (p_keys != NULL)
00000a  b175              CBZ      r5,|L4.42|
;;;115        {
;;;116            for (uint32_t i = 0; i < SDK_MAPPED_FLAGS_N_KEYS; i++)
00000c  2400              MOVS     r4,#0
00000e  e00a              B        |L4.38|
                  |L4.16|
;;;117            {
;;;118                if (p_keys[i] == key)
000010  f8350014          LDRH     r0,[r5,r4,LSL #1]
000014  42b8              CMP      r0,r7
000016  d105              BNE      |L4.36|
;;;119                {
;;;120                    return sdk_mapped_flags_get_by_index(flags, i);
000018  b2a1              UXTH     r1,r4
00001a  4630              MOV      r0,r6
00001c  f7fffffe          BL       sdk_mapped_flags_get_by_index
                  |L4.32|
;;;121                }
;;;122            }
;;;123        }
;;;124        return false;
;;;125    }
000020  e8bd81f0          POP      {r4-r8,pc}
                  |L4.36|
000024  1c64              ADDS     r4,r4,#1              ;116
                  |L4.38|
000026  2c08              CMP      r4,#8                 ;116
000028  d3f2              BCC      |L4.16|
                  |L4.42|
00002a  2000              MOVS     r0,#0                 ;124
00002c  e7f8              B        |L4.32|
;;;126    
                          ENDP


                          AREA ||i.sdk_mapped_flags_key_list_get||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_key_list_get PROC
;;;127    
;;;128    sdk_mapped_flags_key_list_t sdk_mapped_flags_key_list_get(uint16_t           * p_keys,
000000  b5f0              PUSH     {r4-r7,lr}
;;;129                                                              sdk_mapped_flags_t   flags)
;;;130    {
000002  b085              SUB      sp,sp,#0x14
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;131        sdk_mapped_flags_key_list_t key_list;
;;;132        key_list.len = 0;
00000a  2000              MOVS     r0,#0
00000c  9000              STR      r0,[sp,#0]
;;;133    
;;;134        if (p_keys != NULL)
00000e  b18d              CBZ      r5,|L5.52|
;;;135        {
;;;136            for (uint32_t i = 0; i < SDK_MAPPED_FLAGS_N_KEYS; i++)
000010  2400              MOVS     r4,#0
000012  e00d              B        |L5.48|
                  |L5.20|
;;;137            {
;;;138                if (sdk_mapped_flags_get_by_index(flags, i))
000014  b2a1              UXTH     r1,r4
000016  4630              MOV      r0,r6
000018  f7fffffe          BL       sdk_mapped_flags_get_by_index
00001c  b138              CBZ      r0,|L5.46|
;;;139                {
;;;140                    key_list.flag_keys[key_list.len++] = p_keys[i];
00001e  f8351014          LDRH     r1,[r5,r4,LSL #1]
000022  9a00              LDR      r2,[sp,#0]
000024  1c50              ADDS     r0,r2,#1
000026  9000              STR      r0,[sp,#0]
000028  a801              ADD      r0,sp,#4
00002a  f8201012          STRH     r1,[r0,r2,LSL #1]
                  |L5.46|
00002e  1c64              ADDS     r4,r4,#1              ;136
                  |L5.48|
000030  2c08              CMP      r4,#8                 ;136
000032  d3ef              BCC      |L5.20|
                  |L5.52|
;;;141                }
;;;142            }
;;;143        }
;;;144    
;;;145        return key_list;
000034  2214              MOVS     r2,#0x14
000036  4669              MOV      r1,sp
000038  4638              MOV      r0,r7
00003a  f7fffffe          BL       __aeabi_memcpy4
;;;146    }
00003e  b005              ADD      sp,sp,#0x14
000040  bdf0              POP      {r4-r7,pc}
;;;147    
                          ENDP


                          AREA ||i.sdk_mapped_flags_n_flags_set||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_n_flags_set PROC
;;;148    
;;;149    uint32_t sdk_mapped_flags_n_flags_set(sdk_mapped_flags_t flags)
000000  b570              PUSH     {r4-r6,lr}
;;;150    {
000002  4606              MOV      r6,r0
;;;151        uint32_t n_flags_set = 0;
000004  2500              MOVS     r5,#0
;;;152    
;;;153        for (uint32_t i = 0; i < SDK_MAPPED_FLAGS_N_KEYS; i++)
000006  2400              MOVS     r4,#0
000008  e006              B        |L6.24|
                  |L6.10|
;;;154        {
;;;155            if (sdk_mapped_flags_get_by_index(flags, i))
00000a  b2a1              UXTH     r1,r4
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       sdk_mapped_flags_get_by_index
000012  b100              CBZ      r0,|L6.22|
;;;156            {
;;;157                n_flags_set += 1;
000014  1c6d              ADDS     r5,r5,#1
                  |L6.22|
000016  1c64              ADDS     r4,r4,#1              ;153
                  |L6.24|
000018  2c08              CMP      r4,#8                 ;153
00001a  d3f6              BCC      |L6.10|
;;;158            }
;;;159        }
;;;160        return n_flags_set;
00001c  4628              MOV      r0,r5
;;;161    }
00001e  bd70              POP      {r4-r6,pc}
                          ENDP


                          AREA ||i.sdk_mapped_flags_update_by_key||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_update_by_key PROC
;;;72     
;;;73     void sdk_mapped_flags_update_by_key(uint16_t           * p_keys,
000000  b5f8              PUSH     {r3-r7,lr}
;;;74                                         sdk_mapped_flags_t * p_flags,
;;;75                                         uint16_t             key,
;;;76                                         bool                 value)
;;;77     {
000002  4606              MOV      r6,r0
000004  460f              MOV      r7,r1
000006  4614              MOV      r4,r2
000008  461d              MOV      r5,r3
;;;78         sdk_mapped_flags_bulk_update_by_key(p_keys, p_flags, 1, key, value);
00000a  4623              MOV      r3,r4
00000c  2201              MOVS     r2,#1
00000e  4639              MOV      r1,r7
000010  4630              MOV      r0,r6
000012  9500              STR      r5,[sp,#0]
000014  f7fffffe          BL       sdk_mapped_flags_bulk_update_by_key
;;;79     }
000018  bdf8              POP      {r3-r7,pc}
;;;80     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\libraries\\util\\sdk_mapped_flags.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_sdk_mapped_flags_c_164c3d67____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___18_sdk_mapped_flags_c_164c3d67____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_sdk_mapped_flags_c_164c3d67____REVSH|
#line 402
|__asm___18_sdk_mapped_flags_c_164c3d67____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_sdk_mapped_flags_c_164c3d67____RRX|
#line 587
|__asm___18_sdk_mapped_flags_c_164c3d67____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
